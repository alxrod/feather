// @generated by protobuf-ts 2.8.2 with parameter generate_dependencies
// @generated from protobuf file "communication/user.proto" (package "communication", syntax proto3)
// tslint:disable
import { NullResponse } from "./contract";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ProfileImageEntity } from "./file_service";
import { Timestamp } from "../google/protobuf/timestamp";
/**
 * @generated from protobuf message communication.UserRegisterRequest
 */
export interface UserRegisterRequest {
    /**
     * @generated from protobuf field: string username = 1;
     */
    username: string;
    /**
     * @generated from protobuf field: string email = 2;
     */
    email: string;
    /**
     * @generated from protobuf field: string password = 3;
     */
    password: string;
    /**
     * @generated from protobuf field: string first_name = 4;
     */
    firstName: string;
    /**
     * @generated from protobuf field: string last_name = 6;
     */
    lastName: string;
    /**
     * @generated from protobuf field: string phone_number = 7;
     */
    phoneNumber: string;
}
/**
 * @generated from protobuf message communication.UserLoginRequest
 */
export interface UserLoginRequest {
    /**
     * @generated from protobuf field: string username_or_email = 1;
     */
    usernameOrEmail: string;
    /**
     * @generated from protobuf field: string password = 2;
     */
    password: string;
}
/**
 * @generated from protobuf message communication.UserSigninResponse
 */
export interface UserSigninResponse {
    /**
     * @generated from protobuf field: string token = 3;
     */
    token: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp token_timeout = 7;
     */
    tokenTimeout?: Timestamp;
    /**
     * @generated from protobuf field: communication.UserEntity user = 8;
     */
    user?: UserEntity;
}
/**
 * @generated from protobuf message communication.UserLogoutRequest
 */
export interface UserLogoutRequest {
    /**
     * @generated from protobuf field: string username = 1;
     */
    username: string;
    /**
     * @generated from protobuf field: string token = 2;
     */
    token: string;
}
/**
 * @generated from protobuf message communication.UserLogoutResponse
 */
export interface UserLogoutResponse {
}
/**
 * @generated from protobuf message communication.UserPullRequest
 */
export interface UserPullRequest {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    userId: string;
}
/**
 * @generated from protobuf message communication.UserEntity
 */
export interface UserEntity {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string username = 2;
     */
    username: string;
    /**
     * @generated from protobuf field: uint32 role = 14;
     */
    role: number;
    /**
     * @generated from protobuf field: string email = 4;
     */
    email: string;
    /**
     * @generated from protobuf field: string first_name = 20;
     */
    firstName: string;
    /**
     * @generated from protobuf field: string last_name = 21;
     */
    lastName: string;
    /**
     * @generated from protobuf field: string phone_number = 22;
     */
    phoneNumber: string;
    /**
     * @generated from protobuf field: repeated uint32 contract_ids = 6 [packed = true];
     */
    contractIds: number[];
    /**
     * @generated from protobuf field: string insta_account = 7;
     */
    instaAccount: string;
    /**
     * @generated from protobuf field: uint32 insta_followers = 8;
     */
    instaFollowers: number;
    /**
     * @generated from protobuf field: bool insta_verified = 9;
     */
    instaVerified: boolean;
    /**
     * @generated from protobuf field: string tiktok_account = 10;
     */
    tiktokAccount: string;
    /**
     * @generated from protobuf field: uint32 tiktok_followers = 11;
     */
    tiktokFollowers: number;
    /**
     * @generated from protobuf field: bool tiktok_verified = 12;
     */
    tiktokVerified: boolean;
    /**
     * @generated from protobuf field: bool payment_setup = 13;
     */
    paymentSetup: boolean;
    /**
     * @generated from protobuf field: bool admin_status = 15;
     */
    adminStatus: boolean;
    /**
     * @generated from protobuf field: bool profile_photo_uploaded = 16;
     */
    profilePhotoUploaded: boolean;
    /**
     * @generated from protobuf field: string profile_photo_id = 17;
     */
    profilePhotoId: string;
    /**
     * @generated from protobuf field: communication.ProfileImageEntity profile_photo = 18;
     */
    profilePhoto?: ProfileImageEntity;
    /**
     * @generated from protobuf field: bool worker_mode_requested = 25;
     */
    workerModeRequested: boolean;
    /**
     * @generated from protobuf field: bool buyer_mode_requested = 26;
     */
    buyerModeRequested: boolean;
    /**
     * @generated from protobuf field: bool worker_mode_enabled = 27;
     */
    workerModeEnabled: boolean;
    /**
     * @generated from protobuf field: bool buyer_mode_enabled = 28;
     */
    buyerModeEnabled: boolean;
    /**
     * @generated from protobuf field: string default_fca = 29;
     */
    defaultFca: string;
    /**
     * @generated from protobuf field: int64 outstanding_balance = 30;
     */
    outstandingBalance: bigint;
    /**
     * @generated from protobuf field: bool FigmaConnected = 31 [json_name = "FigmaConnected"];
     */
    figmaConnected: boolean;
    /**
     * @generated from protobuf field: string FigmaCode = 32 [json_name = "FigmaCode"];
     */
    figmaCode: string;
}
/**
 * @generated from protobuf message communication.ForgotRequest
 */
export interface ForgotRequest {
    /**
     * @generated from protobuf field: string email = 1;
     */
    email: string;
}
/**
 * @generated from protobuf message communication.ResetConfirmRequest
 */
export interface ResetConfirmRequest {
    /**
     * @generated from protobuf field: string reset_id = 1;
     */
    resetId: string;
}
/**
 * @generated from protobuf message communication.ResetConfirmResponse
 */
export interface ResetConfirmResponse {
    /**
     * @generated from protobuf field: bool valid_id = 1;
     */
    validId: boolean;
}
/**
 * @generated from protobuf message communication.ChangePasswordRequest
 */
export interface ChangePasswordRequest {
    /**
     * @generated from protobuf field: string reset_id = 1;
     */
    resetId: string;
    /**
     * @generated from protobuf field: string new_password = 2;
     */
    newPassword: string;
}
/**
 * @generated from protobuf message communication.FigmaConnectRequest
 */
export interface FigmaConnectRequest {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    userId: string;
    /**
     * @generated from protobuf field: string figma_code = 2;
     */
    figmaCode: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class UserRegisterRequest$Type extends MessageType<UserRegisterRequest> {
    constructor() {
        super("communication.UserRegisterRequest", [
            { no: 1, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "password", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "first_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "last_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "phone_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserRegisterRequest>): UserRegisterRequest {
        const message = { username: "", email: "", password: "", firstName: "", lastName: "", phoneNumber: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserRegisterRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserRegisterRequest): UserRegisterRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string username */ 1:
                    message.username = reader.string();
                    break;
                case /* string email */ 2:
                    message.email = reader.string();
                    break;
                case /* string password */ 3:
                    message.password = reader.string();
                    break;
                case /* string first_name */ 4:
                    message.firstName = reader.string();
                    break;
                case /* string last_name */ 6:
                    message.lastName = reader.string();
                    break;
                case /* string phone_number */ 7:
                    message.phoneNumber = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserRegisterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string username = 1; */
        if (message.username !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.username);
        /* string email = 2; */
        if (message.email !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.email);
        /* string password = 3; */
        if (message.password !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.password);
        /* string first_name = 4; */
        if (message.firstName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.firstName);
        /* string last_name = 6; */
        if (message.lastName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.lastName);
        /* string phone_number = 7; */
        if (message.phoneNumber !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.phoneNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.UserRegisterRequest
 */
export const UserRegisterRequest = new UserRegisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserLoginRequest$Type extends MessageType<UserLoginRequest> {
    constructor() {
        super("communication.UserLoginRequest", [
            { no: 1, name: "username_or_email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "password", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserLoginRequest>): UserLoginRequest {
        const message = { usernameOrEmail: "", password: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserLoginRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserLoginRequest): UserLoginRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string username_or_email */ 1:
                    message.usernameOrEmail = reader.string();
                    break;
                case /* string password */ 2:
                    message.password = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserLoginRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string username_or_email = 1; */
        if (message.usernameOrEmail !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.usernameOrEmail);
        /* string password = 2; */
        if (message.password !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.password);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.UserLoginRequest
 */
export const UserLoginRequest = new UserLoginRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserSigninResponse$Type extends MessageType<UserSigninResponse> {
    constructor() {
        super("communication.UserSigninResponse", [
            { no: 3, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "token_timeout", kind: "message", T: () => Timestamp },
            { no: 8, name: "user", kind: "message", T: () => UserEntity }
        ]);
    }
    create(value?: PartialMessage<UserSigninResponse>): UserSigninResponse {
        const message = { token: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserSigninResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserSigninResponse): UserSigninResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string token */ 3:
                    message.token = reader.string();
                    break;
                case /* google.protobuf.Timestamp token_timeout */ 7:
                    message.tokenTimeout = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.tokenTimeout);
                    break;
                case /* communication.UserEntity user */ 8:
                    message.user = UserEntity.internalBinaryRead(reader, reader.uint32(), options, message.user);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserSigninResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string token = 3; */
        if (message.token !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.token);
        /* google.protobuf.Timestamp token_timeout = 7; */
        if (message.tokenTimeout)
            Timestamp.internalBinaryWrite(message.tokenTimeout, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* communication.UserEntity user = 8; */
        if (message.user)
            UserEntity.internalBinaryWrite(message.user, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.UserSigninResponse
 */
export const UserSigninResponse = new UserSigninResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserLogoutRequest$Type extends MessageType<UserLogoutRequest> {
    constructor() {
        super("communication.UserLogoutRequest", [
            { no: 1, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserLogoutRequest>): UserLogoutRequest {
        const message = { username: "", token: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserLogoutRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserLogoutRequest): UserLogoutRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string username */ 1:
                    message.username = reader.string();
                    break;
                case /* string token */ 2:
                    message.token = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserLogoutRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string username = 1; */
        if (message.username !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.username);
        /* string token = 2; */
        if (message.token !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.token);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.UserLogoutRequest
 */
export const UserLogoutRequest = new UserLogoutRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserLogoutResponse$Type extends MessageType<UserLogoutResponse> {
    constructor() {
        super("communication.UserLogoutResponse", []);
    }
    create(value?: PartialMessage<UserLogoutResponse>): UserLogoutResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserLogoutResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserLogoutResponse): UserLogoutResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: UserLogoutResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.UserLogoutResponse
 */
export const UserLogoutResponse = new UserLogoutResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserPullRequest$Type extends MessageType<UserPullRequest> {
    constructor() {
        super("communication.UserPullRequest", [
            { no: 1, name: "user_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserPullRequest>): UserPullRequest {
        const message = { userId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserPullRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserPullRequest): UserPullRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string user_id */ 1:
                    message.userId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserPullRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string user_id = 1; */
        if (message.userId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.userId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.UserPullRequest
 */
export const UserPullRequest = new UserPullRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserEntity$Type extends MessageType<UserEntity> {
    constructor() {
        super("communication.UserEntity", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "role", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "first_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "last_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "phone_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "contract_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "insta_account", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "insta_followers", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "insta_verified", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "tiktok_account", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "tiktok_followers", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "tiktok_verified", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "payment_setup", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "admin_status", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "profile_photo_uploaded", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "profile_photo_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "profile_photo", kind: "message", T: () => ProfileImageEntity },
            { no: 25, name: "worker_mode_requested", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 26, name: "buyer_mode_requested", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 27, name: "worker_mode_enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 28, name: "buyer_mode_enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 29, name: "default_fca", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 30, name: "outstanding_balance", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 31, name: "FigmaConnected", kind: "scalar", jsonName: "FigmaConnected", T: 8 /*ScalarType.BOOL*/ },
            { no: 32, name: "FigmaCode", kind: "scalar", jsonName: "FigmaCode", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserEntity>): UserEntity {
        const message = { id: "", username: "", role: 0, email: "", firstName: "", lastName: "", phoneNumber: "", contractIds: [], instaAccount: "", instaFollowers: 0, instaVerified: false, tiktokAccount: "", tiktokFollowers: 0, tiktokVerified: false, paymentSetup: false, adminStatus: false, profilePhotoUploaded: false, profilePhotoId: "", workerModeRequested: false, buyerModeRequested: false, workerModeEnabled: false, buyerModeEnabled: false, defaultFca: "", outstandingBalance: 0n, figmaConnected: false, figmaCode: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserEntity>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserEntity): UserEntity {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string username */ 2:
                    message.username = reader.string();
                    break;
                case /* uint32 role */ 14:
                    message.role = reader.uint32();
                    break;
                case /* string email */ 4:
                    message.email = reader.string();
                    break;
                case /* string first_name */ 20:
                    message.firstName = reader.string();
                    break;
                case /* string last_name */ 21:
                    message.lastName = reader.string();
                    break;
                case /* string phone_number */ 22:
                    message.phoneNumber = reader.string();
                    break;
                case /* repeated uint32 contract_ids = 6 [packed = true];*/ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.contractIds.push(reader.uint32());
                    else
                        message.contractIds.push(reader.uint32());
                    break;
                case /* string insta_account */ 7:
                    message.instaAccount = reader.string();
                    break;
                case /* uint32 insta_followers */ 8:
                    message.instaFollowers = reader.uint32();
                    break;
                case /* bool insta_verified */ 9:
                    message.instaVerified = reader.bool();
                    break;
                case /* string tiktok_account */ 10:
                    message.tiktokAccount = reader.string();
                    break;
                case /* uint32 tiktok_followers */ 11:
                    message.tiktokFollowers = reader.uint32();
                    break;
                case /* bool tiktok_verified */ 12:
                    message.tiktokVerified = reader.bool();
                    break;
                case /* bool payment_setup */ 13:
                    message.paymentSetup = reader.bool();
                    break;
                case /* bool admin_status */ 15:
                    message.adminStatus = reader.bool();
                    break;
                case /* bool profile_photo_uploaded */ 16:
                    message.profilePhotoUploaded = reader.bool();
                    break;
                case /* string profile_photo_id */ 17:
                    message.profilePhotoId = reader.string();
                    break;
                case /* communication.ProfileImageEntity profile_photo */ 18:
                    message.profilePhoto = ProfileImageEntity.internalBinaryRead(reader, reader.uint32(), options, message.profilePhoto);
                    break;
                case /* bool worker_mode_requested */ 25:
                    message.workerModeRequested = reader.bool();
                    break;
                case /* bool buyer_mode_requested */ 26:
                    message.buyerModeRequested = reader.bool();
                    break;
                case /* bool worker_mode_enabled */ 27:
                    message.workerModeEnabled = reader.bool();
                    break;
                case /* bool buyer_mode_enabled */ 28:
                    message.buyerModeEnabled = reader.bool();
                    break;
                case /* string default_fca */ 29:
                    message.defaultFca = reader.string();
                    break;
                case /* int64 outstanding_balance */ 30:
                    message.outstandingBalance = reader.int64().toBigInt();
                    break;
                case /* bool FigmaConnected = 31 [json_name = "FigmaConnected"];*/ 31:
                    message.figmaConnected = reader.bool();
                    break;
                case /* string FigmaCode = 32 [json_name = "FigmaCode"];*/ 32:
                    message.figmaCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserEntity, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string username = 2; */
        if (message.username !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.username);
        /* uint32 role = 14; */
        if (message.role !== 0)
            writer.tag(14, WireType.Varint).uint32(message.role);
        /* string email = 4; */
        if (message.email !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.email);
        /* string first_name = 20; */
        if (message.firstName !== "")
            writer.tag(20, WireType.LengthDelimited).string(message.firstName);
        /* string last_name = 21; */
        if (message.lastName !== "")
            writer.tag(21, WireType.LengthDelimited).string(message.lastName);
        /* string phone_number = 22; */
        if (message.phoneNumber !== "")
            writer.tag(22, WireType.LengthDelimited).string(message.phoneNumber);
        /* repeated uint32 contract_ids = 6 [packed = true]; */
        if (message.contractIds.length) {
            writer.tag(6, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.contractIds.length; i++)
                writer.uint32(message.contractIds[i]);
            writer.join();
        }
        /* string insta_account = 7; */
        if (message.instaAccount !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.instaAccount);
        /* uint32 insta_followers = 8; */
        if (message.instaFollowers !== 0)
            writer.tag(8, WireType.Varint).uint32(message.instaFollowers);
        /* bool insta_verified = 9; */
        if (message.instaVerified !== false)
            writer.tag(9, WireType.Varint).bool(message.instaVerified);
        /* string tiktok_account = 10; */
        if (message.tiktokAccount !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.tiktokAccount);
        /* uint32 tiktok_followers = 11; */
        if (message.tiktokFollowers !== 0)
            writer.tag(11, WireType.Varint).uint32(message.tiktokFollowers);
        /* bool tiktok_verified = 12; */
        if (message.tiktokVerified !== false)
            writer.tag(12, WireType.Varint).bool(message.tiktokVerified);
        /* bool payment_setup = 13; */
        if (message.paymentSetup !== false)
            writer.tag(13, WireType.Varint).bool(message.paymentSetup);
        /* bool admin_status = 15; */
        if (message.adminStatus !== false)
            writer.tag(15, WireType.Varint).bool(message.adminStatus);
        /* bool profile_photo_uploaded = 16; */
        if (message.profilePhotoUploaded !== false)
            writer.tag(16, WireType.Varint).bool(message.profilePhotoUploaded);
        /* string profile_photo_id = 17; */
        if (message.profilePhotoId !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.profilePhotoId);
        /* communication.ProfileImageEntity profile_photo = 18; */
        if (message.profilePhoto)
            ProfileImageEntity.internalBinaryWrite(message.profilePhoto, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* bool worker_mode_requested = 25; */
        if (message.workerModeRequested !== false)
            writer.tag(25, WireType.Varint).bool(message.workerModeRequested);
        /* bool buyer_mode_requested = 26; */
        if (message.buyerModeRequested !== false)
            writer.tag(26, WireType.Varint).bool(message.buyerModeRequested);
        /* bool worker_mode_enabled = 27; */
        if (message.workerModeEnabled !== false)
            writer.tag(27, WireType.Varint).bool(message.workerModeEnabled);
        /* bool buyer_mode_enabled = 28; */
        if (message.buyerModeEnabled !== false)
            writer.tag(28, WireType.Varint).bool(message.buyerModeEnabled);
        /* string default_fca = 29; */
        if (message.defaultFca !== "")
            writer.tag(29, WireType.LengthDelimited).string(message.defaultFca);
        /* int64 outstanding_balance = 30; */
        if (message.outstandingBalance !== 0n)
            writer.tag(30, WireType.Varint).int64(message.outstandingBalance);
        /* bool FigmaConnected = 31 [json_name = "FigmaConnected"]; */
        if (message.figmaConnected !== false)
            writer.tag(31, WireType.Varint).bool(message.figmaConnected);
        /* string FigmaCode = 32 [json_name = "FigmaCode"]; */
        if (message.figmaCode !== "")
            writer.tag(32, WireType.LengthDelimited).string(message.figmaCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.UserEntity
 */
export const UserEntity = new UserEntity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ForgotRequest$Type extends MessageType<ForgotRequest> {
    constructor() {
        super("communication.ForgotRequest", [
            { no: 1, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ForgotRequest>): ForgotRequest {
        const message = { email: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ForgotRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ForgotRequest): ForgotRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string email */ 1:
                    message.email = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ForgotRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string email = 1; */
        if (message.email !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.email);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.ForgotRequest
 */
export const ForgotRequest = new ForgotRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResetConfirmRequest$Type extends MessageType<ResetConfirmRequest> {
    constructor() {
        super("communication.ResetConfirmRequest", [
            { no: 1, name: "reset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ResetConfirmRequest>): ResetConfirmRequest {
        const message = { resetId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ResetConfirmRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResetConfirmRequest): ResetConfirmRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string reset_id */ 1:
                    message.resetId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ResetConfirmRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string reset_id = 1; */
        if (message.resetId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resetId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.ResetConfirmRequest
 */
export const ResetConfirmRequest = new ResetConfirmRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResetConfirmResponse$Type extends MessageType<ResetConfirmResponse> {
    constructor() {
        super("communication.ResetConfirmResponse", [
            { no: 1, name: "valid_id", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ResetConfirmResponse>): ResetConfirmResponse {
        const message = { validId: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ResetConfirmResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResetConfirmResponse): ResetConfirmResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool valid_id */ 1:
                    message.validId = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ResetConfirmResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool valid_id = 1; */
        if (message.validId !== false)
            writer.tag(1, WireType.Varint).bool(message.validId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.ResetConfirmResponse
 */
export const ResetConfirmResponse = new ResetConfirmResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangePasswordRequest$Type extends MessageType<ChangePasswordRequest> {
    constructor() {
        super("communication.ChangePasswordRequest", [
            { no: 1, name: "reset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "new_password", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ChangePasswordRequest>): ChangePasswordRequest {
        const message = { resetId: "", newPassword: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangePasswordRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangePasswordRequest): ChangePasswordRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string reset_id */ 1:
                    message.resetId = reader.string();
                    break;
                case /* string new_password */ 2:
                    message.newPassword = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangePasswordRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string reset_id = 1; */
        if (message.resetId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resetId);
        /* string new_password = 2; */
        if (message.newPassword !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.newPassword);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.ChangePasswordRequest
 */
export const ChangePasswordRequest = new ChangePasswordRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FigmaConnectRequest$Type extends MessageType<FigmaConnectRequest> {
    constructor() {
        super("communication.FigmaConnectRequest", [
            { no: 1, name: "user_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "figma_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FigmaConnectRequest>): FigmaConnectRequest {
        const message = { userId: "", figmaCode: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FigmaConnectRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FigmaConnectRequest): FigmaConnectRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string user_id */ 1:
                    message.userId = reader.string();
                    break;
                case /* string figma_code */ 2:
                    message.figmaCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FigmaConnectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string user_id = 1; */
        if (message.userId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.userId);
        /* string figma_code = 2; */
        if (message.figmaCode !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.figmaCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message communication.FigmaConnectRequest
 */
export const FigmaConnectRequest = new FigmaConnectRequest$Type();
/**
 * @generated ServiceType for protobuf service communication.Auth
 */
export const Auth = new ServiceType("communication.Auth", [
    { name: "Register", options: {}, I: UserRegisterRequest, O: UserSigninResponse },
    { name: "Login", options: {}, I: UserLoginRequest, O: UserSigninResponse },
    { name: "Logout", options: {}, I: UserLogoutRequest, O: UserLogoutResponse },
    { name: "Pull", options: {}, I: UserPullRequest, O: UserEntity },
    { name: "ForgotPassword", options: {}, I: ForgotRequest, O: NullResponse },
    { name: "ConfirmResetId", options: {}, I: ResetConfirmRequest, O: ResetConfirmResponse },
    { name: "ChangePassword", options: {}, I: ChangePasswordRequest, O: UserSigninResponse },
    { name: "ConnectFigma", options: {}, I: FigmaConnectRequest, O: NullResponse }
]);
