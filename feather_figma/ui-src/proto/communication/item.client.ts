// @generated by protobuf-ts 2.8.2 with parameter generate_dependencies
// @generated from protobuf file "communication/item.proto" (package "communication", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Item } from "./item";
import type { ContractSettleItemRequest } from "./item";
import type { ReactDelItemReq } from "./item";
import type { SuggestDelItemReq } from "./item";
import type { ReactAddItemReq } from "./item";
import type { ItemEntity } from "./item";
import type { SuggestAddItemReq } from "./item";
import type { ReactItemReq } from "./item";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { NullResponse } from "./generic";
import type { SuggestItemReq } from "./item";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service communication.Item
 */
export interface IItemClient {
    /**
     * @generated from protobuf rpc: SuggestItem(communication.SuggestItemReq) returns (communication.NullResponse);
     */
    suggestItem(input: SuggestItemReq, options?: RpcOptions): UnaryCall<SuggestItemReq, NullResponse>;
    /**
     * @generated from protobuf rpc: ReactItem(communication.ReactItemReq) returns (communication.NullResponse);
     */
    reactItem(input: ReactItemReq, options?: RpcOptions): UnaryCall<ReactItemReq, NullResponse>;
    /**
     * @generated from protobuf rpc: SuggestAddItem(communication.SuggestAddItemReq) returns (communication.ItemEntity);
     */
    suggestAddItem(input: SuggestAddItemReq, options?: RpcOptions): UnaryCall<SuggestAddItemReq, ItemEntity>;
    /**
     * @generated from protobuf rpc: ReactAddItem(communication.ReactAddItemReq) returns (communication.NullResponse);
     */
    reactAddItem(input: ReactAddItemReq, options?: RpcOptions): UnaryCall<ReactAddItemReq, NullResponse>;
    /**
     * @generated from protobuf rpc: SuggestDeleteItem(communication.SuggestDelItemReq) returns (communication.NullResponse);
     */
    suggestDeleteItem(input: SuggestDelItemReq, options?: RpcOptions): UnaryCall<SuggestDelItemReq, NullResponse>;
    /**
     * @generated from protobuf rpc: ReactDeleteItem(communication.ReactDelItemReq) returns (communication.NullResponse);
     */
    reactDeleteItem(input: ReactDelItemReq, options?: RpcOptions): UnaryCall<ReactDelItemReq, NullResponse>;
    /**
     * @generated from protobuf rpc: SettleItem(communication.ContractSettleItemRequest) returns (communication.NullResponse);
     */
    settleItem(input: ContractSettleItemRequest, options?: RpcOptions): UnaryCall<ContractSettleItemRequest, NullResponse>;
}
/**
 * @generated from protobuf service communication.Item
 */
export class ItemClient implements IItemClient, ServiceInfo {
    typeName = Item.typeName;
    methods = Item.methods;
    options = Item.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: SuggestItem(communication.SuggestItemReq) returns (communication.NullResponse);
     */
    suggestItem(input: SuggestItemReq, options?: RpcOptions): UnaryCall<SuggestItemReq, NullResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SuggestItemReq, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ReactItem(communication.ReactItemReq) returns (communication.NullResponse);
     */
    reactItem(input: ReactItemReq, options?: RpcOptions): UnaryCall<ReactItemReq, NullResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ReactItemReq, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SuggestAddItem(communication.SuggestAddItemReq) returns (communication.ItemEntity);
     */
    suggestAddItem(input: SuggestAddItemReq, options?: RpcOptions): UnaryCall<SuggestAddItemReq, ItemEntity> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SuggestAddItemReq, ItemEntity>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ReactAddItem(communication.ReactAddItemReq) returns (communication.NullResponse);
     */
    reactAddItem(input: ReactAddItemReq, options?: RpcOptions): UnaryCall<ReactAddItemReq, NullResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ReactAddItemReq, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SuggestDeleteItem(communication.SuggestDelItemReq) returns (communication.NullResponse);
     */
    suggestDeleteItem(input: SuggestDelItemReq, options?: RpcOptions): UnaryCall<SuggestDelItemReq, NullResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<SuggestDelItemReq, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ReactDeleteItem(communication.ReactDelItemReq) returns (communication.NullResponse);
     */
    reactDeleteItem(input: ReactDelItemReq, options?: RpcOptions): UnaryCall<ReactDelItemReq, NullResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<ReactDelItemReq, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SettleItem(communication.ContractSettleItemRequest) returns (communication.NullResponse);
     */
    settleItem(input: ContractSettleItemRequest, options?: RpcOptions): UnaryCall<ContractSettleItemRequest, NullResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractSettleItemRequest, NullResponse>("unary", this._transport, method, opt, input);
    }
}
