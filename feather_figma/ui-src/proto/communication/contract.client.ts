// @generated by protobuf-ts 2.8.2 with parameter generate_dependencies
// @generated from protobuf file "communication/contract.proto" (package "communication", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Contract } from "./contract";
import type { FigmaItemRequest } from "./contract";
import type { FigmaFileConnectRequest } from "./contract";
import type { ContractAdminSupport } from "./contract";
import type { ContractReactLockRequest } from "./contract";
import type { ContractToggleLockRequest } from "./contract";
import type { ReactPriceReq } from "./contract";
import type { SuggestPriceReq } from "./contract";
import type { ContractNubSet } from "./contract";
import type { QueryByUserRequest } from "./requests";
import type { QueryByIdRequest } from "./requests";
import type { SettleContractRequest } from "./contract";
import type { SignContractRequest } from "./contract";
import type { ClaimContractRequest } from "./contract";
import type { ContractInviteNub } from "./contract";
import type { InviteDataRequest } from "./contract";
import type { NullResponse } from "./generic";
import type { EmailResendRequest } from "./contract";
import type { EmailChangeResponse } from "./contract";
import type { EmailChangeRequest } from "./contract";
import type { ContractFinishCreationRequest } from "./contract";
import type { ContractUpdateRequest } from "./contract";
import type { ContractEditResponse } from "./contract";
import type { ContractDeleteDraftRequest } from "./contract";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ContractResponse } from "./contract";
import type { ContractCreateRequest } from "./contract";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service communication.Contract
 */
export interface IContractClient {
    /**
     * @generated from protobuf rpc: Create(communication.ContractCreateRequest) returns (communication.ContractResponse);
     */
    create(input: ContractCreateRequest, options?: RpcOptions): UnaryCall<ContractCreateRequest, ContractResponse>;
    /**
     * @generated from protobuf rpc: DeleteDraft(communication.ContractDeleteDraftRequest) returns (communication.ContractEditResponse);
     */
    deleteDraft(input: ContractDeleteDraftRequest, options?: RpcOptions): UnaryCall<ContractDeleteDraftRequest, ContractEditResponse>;
    /**
     * @generated from protobuf rpc: UpdateDraft(communication.ContractUpdateRequest) returns (communication.ContractResponse);
     */
    updateDraft(input: ContractUpdateRequest, options?: RpcOptions): UnaryCall<ContractUpdateRequest, ContractResponse>;
    /**
     * @generated from protobuf rpc: FinishCreation(communication.ContractFinishCreationRequest) returns (communication.ContractResponse);
     */
    finishCreation(input: ContractFinishCreationRequest, options?: RpcOptions): UnaryCall<ContractFinishCreationRequest, ContractResponse>;
    /**
     * @generated from protobuf rpc: ChangeInviteEmail(communication.EmailChangeRequest) returns (communication.EmailChangeResponse);
     */
    changeInviteEmail(input: EmailChangeRequest, options?: RpcOptions): UnaryCall<EmailChangeRequest, EmailChangeResponse>;
    /**
     * @generated from protobuf rpc: ResendInviteEmail(communication.EmailResendRequest) returns (communication.NullResponse);
     */
    resendInviteEmail(input: EmailResendRequest, options?: RpcOptions): UnaryCall<EmailResendRequest, NullResponse>;
    /**
     * @generated from protobuf rpc: InviteQuery(communication.InviteDataRequest) returns (communication.ContractInviteNub);
     */
    inviteQuery(input: InviteDataRequest, options?: RpcOptions): UnaryCall<InviteDataRequest, ContractInviteNub>;
    /**
     * @generated from protobuf rpc: Claim(communication.ClaimContractRequest) returns (communication.ContractResponse);
     */
    claim(input: ClaimContractRequest, options?: RpcOptions): UnaryCall<ClaimContractRequest, ContractResponse>;
    /**
     * @generated from protobuf rpc: Sign(communication.SignContractRequest) returns (communication.ContractResponse);
     */
    sign(input: SignContractRequest, options?: RpcOptions): UnaryCall<SignContractRequest, ContractResponse>;
    /**
     * @generated from protobuf rpc: Settle(communication.SettleContractRequest) returns (communication.ContractResponse);
     */
    settle(input: SettleContractRequest, options?: RpcOptions): UnaryCall<SettleContractRequest, ContractResponse>;
    /**
     * @generated from protobuf rpc: QueryById(communication.QueryByIdRequest) returns (communication.ContractResponse);
     */
    queryById(input: QueryByIdRequest, options?: RpcOptions): UnaryCall<QueryByIdRequest, ContractResponse>;
    /**
     * @generated from protobuf rpc: QueryByUser(communication.QueryByUserRequest) returns (communication.ContractNubSet);
     */
    queryByUser(input: QueryByUserRequest, options?: RpcOptions): UnaryCall<QueryByUserRequest, ContractNubSet>;
    /**
     * @generated from protobuf rpc: QueryByAdmin(communication.QueryByUserRequest) returns (communication.ContractNubSet);
     */
    queryByAdmin(input: QueryByUserRequest, options?: RpcOptions): UnaryCall<QueryByUserRequest, ContractNubSet>;
    /**
     * @generated from protobuf rpc: SuggestPrice(communication.SuggestPriceReq) returns (communication.ContractEditResponse);
     */
    suggestPrice(input: SuggestPriceReq, options?: RpcOptions): UnaryCall<SuggestPriceReq, ContractEditResponse>;
    /**
     * @generated from protobuf rpc: ReactPrice(communication.ReactPriceReq) returns (communication.ContractEditResponse);
     */
    reactPrice(input: ReactPriceReq, options?: RpcOptions): UnaryCall<ReactPriceReq, ContractEditResponse>;
    /**
     * @generated from protobuf rpc: ToggleLock(communication.ContractToggleLockRequest) returns (communication.ContractEditResponse);
     */
    toggleLock(input: ContractToggleLockRequest, options?: RpcOptions): UnaryCall<ContractToggleLockRequest, ContractEditResponse>;
    /**
     * @generated from protobuf rpc: ReactLock(communication.ContractReactLockRequest) returns (communication.ContractEditResponse);
     */
    reactLock(input: ContractReactLockRequest, options?: RpcOptions): UnaryCall<ContractReactLockRequest, ContractEditResponse>;
    /**
     * @generated from protobuf rpc: RequestAdmin(communication.ContractAdminSupport) returns (communication.NullResponse);
     */
    requestAdmin(input: ContractAdminSupport, options?: RpcOptions): UnaryCall<ContractAdminSupport, NullResponse>;
    /**
     * @generated from protobuf rpc: ResolveAdmin(communication.ContractAdminSupport) returns (communication.NullResponse);
     */
    resolveAdmin(input: ContractAdminSupport, options?: RpcOptions): UnaryCall<ContractAdminSupport, NullResponse>;
    /**
     * @generated from protobuf rpc: SetFigmaConnected(communication.FigmaFileConnectRequest) returns (communication.ContractEditResponse);
     */
    setFigmaConnected(input: FigmaFileConnectRequest, options?: RpcOptions): UnaryCall<FigmaFileConnectRequest, ContractEditResponse>;
    /**
     * @generated from protobuf rpc: SetItemFigmaNodes(communication.FigmaItemRequest) returns (communication.ContractEditResponse);
     */
    setItemFigmaNodes(input: FigmaItemRequest, options?: RpcOptions): UnaryCall<FigmaItemRequest, ContractEditResponse>;
}
/**
 * @generated from protobuf service communication.Contract
 */
export class ContractClient implements IContractClient, ServiceInfo {
    typeName = Contract.typeName;
    methods = Contract.methods;
    options = Contract.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Create(communication.ContractCreateRequest) returns (communication.ContractResponse);
     */
    create(input: ContractCreateRequest, options?: RpcOptions): UnaryCall<ContractCreateRequest, ContractResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractCreateRequest, ContractResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteDraft(communication.ContractDeleteDraftRequest) returns (communication.ContractEditResponse);
     */
    deleteDraft(input: ContractDeleteDraftRequest, options?: RpcOptions): UnaryCall<ContractDeleteDraftRequest, ContractEditResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractDeleteDraftRequest, ContractEditResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateDraft(communication.ContractUpdateRequest) returns (communication.ContractResponse);
     */
    updateDraft(input: ContractUpdateRequest, options?: RpcOptions): UnaryCall<ContractUpdateRequest, ContractResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractUpdateRequest, ContractResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FinishCreation(communication.ContractFinishCreationRequest) returns (communication.ContractResponse);
     */
    finishCreation(input: ContractFinishCreationRequest, options?: RpcOptions): UnaryCall<ContractFinishCreationRequest, ContractResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractFinishCreationRequest, ContractResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeInviteEmail(communication.EmailChangeRequest) returns (communication.EmailChangeResponse);
     */
    changeInviteEmail(input: EmailChangeRequest, options?: RpcOptions): UnaryCall<EmailChangeRequest, EmailChangeResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmailChangeRequest, EmailChangeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ResendInviteEmail(communication.EmailResendRequest) returns (communication.NullResponse);
     */
    resendInviteEmail(input: EmailResendRequest, options?: RpcOptions): UnaryCall<EmailResendRequest, NullResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmailResendRequest, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: InviteQuery(communication.InviteDataRequest) returns (communication.ContractInviteNub);
     */
    inviteQuery(input: InviteDataRequest, options?: RpcOptions): UnaryCall<InviteDataRequest, ContractInviteNub> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<InviteDataRequest, ContractInviteNub>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Claim(communication.ClaimContractRequest) returns (communication.ContractResponse);
     */
    claim(input: ClaimContractRequest, options?: RpcOptions): UnaryCall<ClaimContractRequest, ContractResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<ClaimContractRequest, ContractResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Sign(communication.SignContractRequest) returns (communication.ContractResponse);
     */
    sign(input: SignContractRequest, options?: RpcOptions): UnaryCall<SignContractRequest, ContractResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<SignContractRequest, ContractResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Settle(communication.SettleContractRequest) returns (communication.ContractResponse);
     */
    settle(input: SettleContractRequest, options?: RpcOptions): UnaryCall<SettleContractRequest, ContractResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<SettleContractRequest, ContractResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: QueryById(communication.QueryByIdRequest) returns (communication.ContractResponse);
     */
    queryById(input: QueryByIdRequest, options?: RpcOptions): UnaryCall<QueryByIdRequest, ContractResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryByIdRequest, ContractResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: QueryByUser(communication.QueryByUserRequest) returns (communication.ContractNubSet);
     */
    queryByUser(input: QueryByUserRequest, options?: RpcOptions): UnaryCall<QueryByUserRequest, ContractNubSet> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryByUserRequest, ContractNubSet>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: QueryByAdmin(communication.QueryByUserRequest) returns (communication.ContractNubSet);
     */
    queryByAdmin(input: QueryByUserRequest, options?: RpcOptions): UnaryCall<QueryByUserRequest, ContractNubSet> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryByUserRequest, ContractNubSet>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SuggestPrice(communication.SuggestPriceReq) returns (communication.ContractEditResponse);
     */
    suggestPrice(input: SuggestPriceReq, options?: RpcOptions): UnaryCall<SuggestPriceReq, ContractEditResponse> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<SuggestPriceReq, ContractEditResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ReactPrice(communication.ReactPriceReq) returns (communication.ContractEditResponse);
     */
    reactPrice(input: ReactPriceReq, options?: RpcOptions): UnaryCall<ReactPriceReq, ContractEditResponse> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<ReactPriceReq, ContractEditResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ToggleLock(communication.ContractToggleLockRequest) returns (communication.ContractEditResponse);
     */
    toggleLock(input: ContractToggleLockRequest, options?: RpcOptions): UnaryCall<ContractToggleLockRequest, ContractEditResponse> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractToggleLockRequest, ContractEditResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ReactLock(communication.ContractReactLockRequest) returns (communication.ContractEditResponse);
     */
    reactLock(input: ContractReactLockRequest, options?: RpcOptions): UnaryCall<ContractReactLockRequest, ContractEditResponse> {
        const method = this.methods[16], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractReactLockRequest, ContractEditResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RequestAdmin(communication.ContractAdminSupport) returns (communication.NullResponse);
     */
    requestAdmin(input: ContractAdminSupport, options?: RpcOptions): UnaryCall<ContractAdminSupport, NullResponse> {
        const method = this.methods[17], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractAdminSupport, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ResolveAdmin(communication.ContractAdminSupport) returns (communication.NullResponse);
     */
    resolveAdmin(input: ContractAdminSupport, options?: RpcOptions): UnaryCall<ContractAdminSupport, NullResponse> {
        const method = this.methods[18], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContractAdminSupport, NullResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetFigmaConnected(communication.FigmaFileConnectRequest) returns (communication.ContractEditResponse);
     */
    setFigmaConnected(input: FigmaFileConnectRequest, options?: RpcOptions): UnaryCall<FigmaFileConnectRequest, ContractEditResponse> {
        const method = this.methods[19], opt = this._transport.mergeOptions(options);
        return stackIntercept<FigmaFileConnectRequest, ContractEditResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetItemFigmaNodes(communication.FigmaItemRequest) returns (communication.ContractEditResponse);
     */
    setItemFigmaNodes(input: FigmaItemRequest, options?: RpcOptions): UnaryCall<FigmaItemRequest, ContractEditResponse> {
        const method = this.methods[20], opt = this._transport.mergeOptions(options);
        return stackIntercept<FigmaItemRequest, ContractEditResponse>("unary", this._transport, method, opt, input);
    }
}
