// source: communication/chat.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var communication_contract_pb = require('../communication/contract_pb.js');
goog.object.extend(proto, communication_contract_pb);
goog.exportSymbol('proto.communication.AdminMsgBody', null, global);
goog.exportSymbol('proto.communication.ChatLabel', null, global);
goog.exportSymbol('proto.communication.ChatMessage', null, global);
goog.exportSymbol('proto.communication.ChatMessage.BodyCase', null, global);
goog.exportSymbol('proto.communication.ChatMessageSet', null, global);
goog.exportSymbol('proto.communication.ChatPullRequest', null, global);
goog.exportSymbol('proto.communication.CommentMsgBody', null, global);
goog.exportSymbol('proto.communication.ContractLockMsgBody', null, global);
goog.exportSymbol('proto.communication.ContractSettleItemMsgBody', null, global);
goog.exportSymbol('proto.communication.ContractSettleMsgBody', null, global);
goog.exportSymbol('proto.communication.ContractSignMsgBody', null, global);
goog.exportSymbol('proto.communication.DateMsgBody', null, global);
goog.exportSymbol('proto.communication.DeadlineCreateMsgBody', null, global);
goog.exportSymbol('proto.communication.DeadlineDeleteMsgBody', null, global);
goog.exportSymbol('proto.communication.DeadlineExpireMsgBody', null, global);
goog.exportSymbol('proto.communication.DeadlineItemMsgBody', null, global);
goog.exportSymbol('proto.communication.DeadlineSettledMsgBody', null, global);
goog.exportSymbol('proto.communication.FinalizeMsgBody', null, global);
goog.exportSymbol('proto.communication.ItemCreateMsgBody', null, global);
goog.exportSymbol('proto.communication.ItemDeleteMsgBody', null, global);
goog.exportSymbol('proto.communication.ItemMsgBody', null, global);
goog.exportSymbol('proto.communication.NewMessageEntity', null, global);
goog.exportSymbol('proto.communication.NewMessageSet', null, global);
goog.exportSymbol('proto.communication.NewMessagesRequest', null, global);
goog.exportSymbol('proto.communication.PayoutMsgBody', null, global);
goog.exportSymbol('proto.communication.PriceMsgBody', null, global);
goog.exportSymbol('proto.communication.ReadReceiptEntity', null, global);
goog.exportSymbol('proto.communication.RevMsgBody', null, global);
goog.exportSymbol('proto.communication.SendRequest', null, global);
goog.exportSymbol('proto.communication.SendRequest.BodyCase', null, global);
goog.exportSymbol('proto.communication.SendResponse', null, global);
goog.exportSymbol('proto.communication.UserClose', null, global);
goog.exportSymbol('proto.communication.UserHandle', null, global);
goog.exportSymbol('proto.communication.UserJoin', null, global);
goog.exportSymbol('proto.communication.UserLeave', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.UserHandle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.UserHandle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.UserHandle.displayName = 'proto.communication.UserHandle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ChatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ChatMessage.repeatedFields_, proto.communication.ChatMessage.oneofGroups_);
};
goog.inherits(proto.communication.ChatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ChatMessage.displayName = 'proto.communication.ChatMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ReadReceiptEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ReadReceiptEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ReadReceiptEntity.displayName = 'proto.communication.ReadReceiptEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ChatLabel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ChatLabel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ChatLabel.displayName = 'proto.communication.ChatLabel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.CommentMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.CommentMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.CommentMsgBody.displayName = 'proto.communication.CommentMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ItemCreateMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ItemCreateMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ItemCreateMsgBody.displayName = 'proto.communication.ItemCreateMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ItemDeleteMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ItemDeleteMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ItemDeleteMsgBody.displayName = 'proto.communication.ItemDeleteMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DeadlineCreateMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.DeadlineCreateMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DeadlineCreateMsgBody.displayName = 'proto.communication.DeadlineCreateMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DeadlineDeleteMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.DeadlineDeleteMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DeadlineDeleteMsgBody.displayName = 'proto.communication.DeadlineDeleteMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ItemMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ItemMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ItemMsgBody.displayName = 'proto.communication.ItemMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DateMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.DateMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DateMsgBody.displayName = 'proto.communication.DateMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.PayoutMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.PayoutMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.PayoutMsgBody.displayName = 'proto.communication.PayoutMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.PriceMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.PriceMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.PriceMsgBody.displayName = 'proto.communication.PriceMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DeadlineItemMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.DeadlineItemMsgBody.repeatedFields_, null);
};
goog.inherits(proto.communication.DeadlineItemMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DeadlineItemMsgBody.displayName = 'proto.communication.DeadlineItemMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractSignMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractSignMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractSignMsgBody.displayName = 'proto.communication.ContractSignMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractSettleItemMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractSettleItemMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractSettleItemMsgBody.displayName = 'proto.communication.ContractSettleItemMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractSettleMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractSettleMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractSettleMsgBody.displayName = 'proto.communication.ContractSettleMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractLockMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractLockMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractLockMsgBody.displayName = 'proto.communication.ContractLockMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.AdminMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.AdminMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.AdminMsgBody.displayName = 'proto.communication.AdminMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.FinalizeMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.FinalizeMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.FinalizeMsgBody.displayName = 'proto.communication.FinalizeMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DeadlineExpireMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.DeadlineExpireMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DeadlineExpireMsgBody.displayName = 'proto.communication.DeadlineExpireMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DeadlineSettledMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.DeadlineSettledMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DeadlineSettledMsgBody.displayName = 'proto.communication.DeadlineSettledMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.RevMsgBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.RevMsgBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.RevMsgBody.displayName = 'proto.communication.RevMsgBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.UserJoin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.UserJoin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.UserJoin.displayName = 'proto.communication.UserJoin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.UserLeave = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.UserLeave, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.UserLeave.displayName = 'proto.communication.UserLeave';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.UserClose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.UserClose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.UserClose.displayName = 'proto.communication.UserClose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.SendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.communication.SendRequest.oneofGroups_);
};
goog.inherits(proto.communication.SendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.SendRequest.displayName = 'proto.communication.SendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.SendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.SendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.SendResponse.displayName = 'proto.communication.SendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ChatPullRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ChatPullRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ChatPullRequest.displayName = 'proto.communication.ChatPullRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ChatMessageSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ChatMessageSet.repeatedFields_, null);
};
goog.inherits(proto.communication.ChatMessageSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ChatMessageSet.displayName = 'proto.communication.ChatMessageSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.NewMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.NewMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.NewMessagesRequest.displayName = 'proto.communication.NewMessagesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.NewMessageEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.NewMessageEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.NewMessageEntity.displayName = 'proto.communication.NewMessageEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.NewMessageSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.NewMessageSet.repeatedFields_, null);
};
goog.inherits(proto.communication.NewMessageSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.NewMessageSet.displayName = 'proto.communication.NewMessageSet';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.UserHandle.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.UserHandle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.UserHandle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserHandle.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.UserHandle}
 */
proto.communication.UserHandle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.UserHandle;
  return proto.communication.UserHandle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.UserHandle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.UserHandle}
 */
proto.communication.UserHandle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.UserHandle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.UserHandle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.UserHandle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserHandle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.UserHandle.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.UserHandle} returns this
 */
proto.communication.UserHandle.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.communication.UserHandle.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.UserHandle} returns this
 */
proto.communication.UserHandle.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ChatMessage.repeatedFields_ = [40];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.communication.ChatMessage.oneofGroups_ = [[6,7,11,8,9,10,12,13,14,15,16,17,18,19,20,24,25,26,27,39]];

/**
 * @enum {number}
 */
proto.communication.ChatMessage.BodyCase = {
  BODY_NOT_SET: 0,
  COMMENT_BODY: 6,
  PAYOUT_BODY: 7,
  DATE_BODY: 11,
  PRICE_BODY: 8,
  ITEM_BODY: 9,
  REV_BODY: 10,
  ITEM_CREATE_BODY: 12,
  ITEM_DELETE_BODY: 13,
  DEADLINE_CREATE_BODY: 14,
  DEADLINE_DELETE_BODY: 15,
  DEADLINE_ITEM_BODY: 16,
  CONTRACT_SIGN_BODY: 17,
  CONTRACT_LOCK_BODY: 18,
  CONTRACT_SETTLE_BODY: 19,
  SETTLE_ITEM_BODY: 20,
  REQUEST_ADMIN_BODY: 24,
  RESOLVE_ADMIN_BODY: 25,
  FINALIZE_BODY: 26,
  DEADLINE_EXPIRE_BODY: 27,
  DEADLINE_SETTLED_BODY: 39
};

/**
 * @return {proto.communication.ChatMessage.BodyCase}
 */
proto.communication.ChatMessage.prototype.getBodyCase = function() {
  return /** @type {proto.communication.ChatMessage.BodyCase} */(jspb.Message.computeOneofCase(this, proto.communication.ChatMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ChatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ChatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ChatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    systemMessage: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    user: (f = msg.getUser()) && proto.communication.UserHandle.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    label: (f = msg.getLabel()) && proto.communication.ChatLabel.toObject(includeInstance, f),
    method: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isAdmin: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    adminOverride: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    adminStatus: jspb.Message.getFieldWithDefault(msg, 23, 0),
    expired: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    silent: jspb.Message.getBooleanFieldWithDefault(msg, 41, false),
    readReceiptsList: jspb.Message.toObjectList(msg.getReadReceiptsList(),
    proto.communication.ReadReceiptEntity.toObject, includeInstance),
    commentBody: (f = msg.getCommentBody()) && proto.communication.CommentMsgBody.toObject(includeInstance, f),
    payoutBody: (f = msg.getPayoutBody()) && proto.communication.PayoutMsgBody.toObject(includeInstance, f),
    dateBody: (f = msg.getDateBody()) && proto.communication.DateMsgBody.toObject(includeInstance, f),
    priceBody: (f = msg.getPriceBody()) && proto.communication.PriceMsgBody.toObject(includeInstance, f),
    itemBody: (f = msg.getItemBody()) && proto.communication.ItemMsgBody.toObject(includeInstance, f),
    revBody: (f = msg.getRevBody()) && proto.communication.RevMsgBody.toObject(includeInstance, f),
    itemCreateBody: (f = msg.getItemCreateBody()) && proto.communication.ItemCreateMsgBody.toObject(includeInstance, f),
    itemDeleteBody: (f = msg.getItemDeleteBody()) && proto.communication.ItemDeleteMsgBody.toObject(includeInstance, f),
    deadlineCreateBody: (f = msg.getDeadlineCreateBody()) && proto.communication.DeadlineCreateMsgBody.toObject(includeInstance, f),
    deadlineDeleteBody: (f = msg.getDeadlineDeleteBody()) && proto.communication.DeadlineDeleteMsgBody.toObject(includeInstance, f),
    deadlineItemBody: (f = msg.getDeadlineItemBody()) && proto.communication.DeadlineItemMsgBody.toObject(includeInstance, f),
    contractSignBody: (f = msg.getContractSignBody()) && proto.communication.ContractSignMsgBody.toObject(includeInstance, f),
    contractLockBody: (f = msg.getContractLockBody()) && proto.communication.ContractLockMsgBody.toObject(includeInstance, f),
    contractSettleBody: (f = msg.getContractSettleBody()) && proto.communication.ContractSettleMsgBody.toObject(includeInstance, f),
    settleItemBody: (f = msg.getSettleItemBody()) && proto.communication.ContractSettleItemMsgBody.toObject(includeInstance, f),
    requestAdminBody: (f = msg.getRequestAdminBody()) && proto.communication.AdminMsgBody.toObject(includeInstance, f),
    resolveAdminBody: (f = msg.getResolveAdminBody()) && proto.communication.AdminMsgBody.toObject(includeInstance, f),
    finalizeBody: (f = msg.getFinalizeBody()) && proto.communication.FinalizeMsgBody.toObject(includeInstance, f),
    deadlineExpireBody: (f = msg.getDeadlineExpireBody()) && proto.communication.DeadlineExpireMsgBody.toObject(includeInstance, f),
    deadlineSettledBody: (f = msg.getDeadlineSettledBody()) && proto.communication.DeadlineSettledMsgBody.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ChatMessage}
 */
proto.communication.ChatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ChatMessage;
  return proto.communication.ChatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ChatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ChatMessage}
 */
proto.communication.ChatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSystemMessage(value);
      break;
    case 2:
      var value = new proto.communication.UserHandle;
      reader.readMessage(value,proto.communication.UserHandle.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 5:
      var value = new proto.communication.ChatLabel;
      reader.readMessage(value,proto.communication.ChatLabel.deserializeBinaryFromReader);
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMethod(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmin(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdminOverride(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAdminStatus(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpired(value);
      break;
    case 41:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSilent(value);
      break;
    case 40:
      var value = new proto.communication.ReadReceiptEntity;
      reader.readMessage(value,proto.communication.ReadReceiptEntity.deserializeBinaryFromReader);
      msg.addReadReceipts(value);
      break;
    case 6:
      var value = new proto.communication.CommentMsgBody;
      reader.readMessage(value,proto.communication.CommentMsgBody.deserializeBinaryFromReader);
      msg.setCommentBody(value);
      break;
    case 7:
      var value = new proto.communication.PayoutMsgBody;
      reader.readMessage(value,proto.communication.PayoutMsgBody.deserializeBinaryFromReader);
      msg.setPayoutBody(value);
      break;
    case 11:
      var value = new proto.communication.DateMsgBody;
      reader.readMessage(value,proto.communication.DateMsgBody.deserializeBinaryFromReader);
      msg.setDateBody(value);
      break;
    case 8:
      var value = new proto.communication.PriceMsgBody;
      reader.readMessage(value,proto.communication.PriceMsgBody.deserializeBinaryFromReader);
      msg.setPriceBody(value);
      break;
    case 9:
      var value = new proto.communication.ItemMsgBody;
      reader.readMessage(value,proto.communication.ItemMsgBody.deserializeBinaryFromReader);
      msg.setItemBody(value);
      break;
    case 10:
      var value = new proto.communication.RevMsgBody;
      reader.readMessage(value,proto.communication.RevMsgBody.deserializeBinaryFromReader);
      msg.setRevBody(value);
      break;
    case 12:
      var value = new proto.communication.ItemCreateMsgBody;
      reader.readMessage(value,proto.communication.ItemCreateMsgBody.deserializeBinaryFromReader);
      msg.setItemCreateBody(value);
      break;
    case 13:
      var value = new proto.communication.ItemDeleteMsgBody;
      reader.readMessage(value,proto.communication.ItemDeleteMsgBody.deserializeBinaryFromReader);
      msg.setItemDeleteBody(value);
      break;
    case 14:
      var value = new proto.communication.DeadlineCreateMsgBody;
      reader.readMessage(value,proto.communication.DeadlineCreateMsgBody.deserializeBinaryFromReader);
      msg.setDeadlineCreateBody(value);
      break;
    case 15:
      var value = new proto.communication.DeadlineDeleteMsgBody;
      reader.readMessage(value,proto.communication.DeadlineDeleteMsgBody.deserializeBinaryFromReader);
      msg.setDeadlineDeleteBody(value);
      break;
    case 16:
      var value = new proto.communication.DeadlineItemMsgBody;
      reader.readMessage(value,proto.communication.DeadlineItemMsgBody.deserializeBinaryFromReader);
      msg.setDeadlineItemBody(value);
      break;
    case 17:
      var value = new proto.communication.ContractSignMsgBody;
      reader.readMessage(value,proto.communication.ContractSignMsgBody.deserializeBinaryFromReader);
      msg.setContractSignBody(value);
      break;
    case 18:
      var value = new proto.communication.ContractLockMsgBody;
      reader.readMessage(value,proto.communication.ContractLockMsgBody.deserializeBinaryFromReader);
      msg.setContractLockBody(value);
      break;
    case 19:
      var value = new proto.communication.ContractSettleMsgBody;
      reader.readMessage(value,proto.communication.ContractSettleMsgBody.deserializeBinaryFromReader);
      msg.setContractSettleBody(value);
      break;
    case 20:
      var value = new proto.communication.ContractSettleItemMsgBody;
      reader.readMessage(value,proto.communication.ContractSettleItemMsgBody.deserializeBinaryFromReader);
      msg.setSettleItemBody(value);
      break;
    case 24:
      var value = new proto.communication.AdminMsgBody;
      reader.readMessage(value,proto.communication.AdminMsgBody.deserializeBinaryFromReader);
      msg.setRequestAdminBody(value);
      break;
    case 25:
      var value = new proto.communication.AdminMsgBody;
      reader.readMessage(value,proto.communication.AdminMsgBody.deserializeBinaryFromReader);
      msg.setResolveAdminBody(value);
      break;
    case 26:
      var value = new proto.communication.FinalizeMsgBody;
      reader.readMessage(value,proto.communication.FinalizeMsgBody.deserializeBinaryFromReader);
      msg.setFinalizeBody(value);
      break;
    case 27:
      var value = new proto.communication.DeadlineExpireMsgBody;
      reader.readMessage(value,proto.communication.DeadlineExpireMsgBody.deserializeBinaryFromReader);
      msg.setDeadlineExpireBody(value);
      break;
    case 39:
      var value = new proto.communication.DeadlineSettledMsgBody;
      reader.readMessage(value,proto.communication.DeadlineSettledMsgBody.deserializeBinaryFromReader);
      msg.setDeadlineSettledBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ChatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ChatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ChatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSystemMessage();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.communication.UserHandle.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLabel();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.communication.ChatLabel.serializeBinaryToWriter
    );
  }
  f = message.getMethod();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getIsAdmin();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getAdminOverride();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getAdminStatus();
  if (f !== 0) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = message.getExpired();
  if (f) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getSilent();
  if (f) {
    writer.writeBool(
      41,
      f
    );
  }
  f = message.getReadReceiptsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      40,
      f,
      proto.communication.ReadReceiptEntity.serializeBinaryToWriter
    );
  }
  f = message.getCommentBody();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.communication.CommentMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getPayoutBody();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.communication.PayoutMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getDateBody();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.communication.DateMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getPriceBody();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.communication.PriceMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getItemBody();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.communication.ItemMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getRevBody();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.communication.RevMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getItemCreateBody();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.communication.ItemCreateMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getItemDeleteBody();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.communication.ItemDeleteMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getDeadlineCreateBody();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.communication.DeadlineCreateMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getDeadlineDeleteBody();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.communication.DeadlineDeleteMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getDeadlineItemBody();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.communication.DeadlineItemMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getContractSignBody();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.communication.ContractSignMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getContractLockBody();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.communication.ContractLockMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getContractSettleBody();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.communication.ContractSettleMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getSettleItemBody();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.communication.ContractSettleItemMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getRequestAdminBody();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.communication.AdminMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getResolveAdminBody();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.communication.AdminMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getFinalizeBody();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.communication.FinalizeMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getDeadlineExpireBody();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.communication.DeadlineExpireMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getDeadlineSettledBody();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.communication.DeadlineSettledMsgBody.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.ChatMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool system_message = 28;
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.getSystemMessage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setSystemMessage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional UserHandle user = 2;
 * @return {?proto.communication.UserHandle}
 */
proto.communication.ChatMessage.prototype.getUser = function() {
  return /** @type{?proto.communication.UserHandle} */ (
    jspb.Message.getWrapperField(this, proto.communication.UserHandle, 2));
};


/**
 * @param {?proto.communication.UserHandle|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.communication.ChatMessage.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ChatLabel label = 5;
 * @return {?proto.communication.ChatLabel}
 */
proto.communication.ChatMessage.prototype.getLabel = function() {
  return /** @type{?proto.communication.ChatLabel} */ (
    jspb.Message.getWrapperField(this, proto.communication.ChatLabel, 5));
};


/**
 * @param {?proto.communication.ChatLabel|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setLabel = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearLabel = function() {
  return this.setLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 method = 4;
 * @return {number}
 */
proto.communication.ChatMessage.prototype.getMethod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setMethod = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_admin = 21;
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.getIsAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setIsAdmin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool admin_override = 22;
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.getAdminOverride = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setAdminOverride = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional uint32 admin_status = 23;
 * @return {number}
 */
proto.communication.ChatMessage.prototype.getAdminStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setAdminStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional bool expired = 29;
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.getExpired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setExpired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * optional bool silent = 41;
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.getSilent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 41, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.setSilent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 41, value);
};


/**
 * repeated ReadReceiptEntity read_receipts = 40;
 * @return {!Array<!proto.communication.ReadReceiptEntity>}
 */
proto.communication.ChatMessage.prototype.getReadReceiptsList = function() {
  return /** @type{!Array<!proto.communication.ReadReceiptEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.communication.ReadReceiptEntity, 40));
};


/**
 * @param {!Array<!proto.communication.ReadReceiptEntity>} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setReadReceiptsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 40, value);
};


/**
 * @param {!proto.communication.ReadReceiptEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ReadReceiptEntity}
 */
proto.communication.ChatMessage.prototype.addReadReceipts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 40, opt_value, proto.communication.ReadReceiptEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearReadReceiptsList = function() {
  return this.setReadReceiptsList([]);
};


/**
 * optional CommentMsgBody comment_body = 6;
 * @return {?proto.communication.CommentMsgBody}
 */
proto.communication.ChatMessage.prototype.getCommentBody = function() {
  return /** @type{?proto.communication.CommentMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.CommentMsgBody, 6));
};


/**
 * @param {?proto.communication.CommentMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setCommentBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearCommentBody = function() {
  return this.setCommentBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasCommentBody = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PayoutMsgBody payout_body = 7;
 * @return {?proto.communication.PayoutMsgBody}
 */
proto.communication.ChatMessage.prototype.getPayoutBody = function() {
  return /** @type{?proto.communication.PayoutMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.PayoutMsgBody, 7));
};


/**
 * @param {?proto.communication.PayoutMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setPayoutBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearPayoutBody = function() {
  return this.setPayoutBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasPayoutBody = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DateMsgBody date_body = 11;
 * @return {?proto.communication.DateMsgBody}
 */
proto.communication.ChatMessage.prototype.getDateBody = function() {
  return /** @type{?proto.communication.DateMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.DateMsgBody, 11));
};


/**
 * @param {?proto.communication.DateMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setDateBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearDateBody = function() {
  return this.setDateBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasDateBody = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PriceMsgBody price_body = 8;
 * @return {?proto.communication.PriceMsgBody}
 */
proto.communication.ChatMessage.prototype.getPriceBody = function() {
  return /** @type{?proto.communication.PriceMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.PriceMsgBody, 8));
};


/**
 * @param {?proto.communication.PriceMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setPriceBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearPriceBody = function() {
  return this.setPriceBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasPriceBody = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ItemMsgBody item_body = 9;
 * @return {?proto.communication.ItemMsgBody}
 */
proto.communication.ChatMessage.prototype.getItemBody = function() {
  return /** @type{?proto.communication.ItemMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ItemMsgBody, 9));
};


/**
 * @param {?proto.communication.ItemMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setItemBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearItemBody = function() {
  return this.setItemBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasItemBody = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional RevMsgBody rev_body = 10;
 * @return {?proto.communication.RevMsgBody}
 */
proto.communication.ChatMessage.prototype.getRevBody = function() {
  return /** @type{?proto.communication.RevMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.RevMsgBody, 10));
};


/**
 * @param {?proto.communication.RevMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setRevBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearRevBody = function() {
  return this.setRevBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasRevBody = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ItemCreateMsgBody item_create_body = 12;
 * @return {?proto.communication.ItemCreateMsgBody}
 */
proto.communication.ChatMessage.prototype.getItemCreateBody = function() {
  return /** @type{?proto.communication.ItemCreateMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ItemCreateMsgBody, 12));
};


/**
 * @param {?proto.communication.ItemCreateMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setItemCreateBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearItemCreateBody = function() {
  return this.setItemCreateBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasItemCreateBody = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ItemDeleteMsgBody item_delete_body = 13;
 * @return {?proto.communication.ItemDeleteMsgBody}
 */
proto.communication.ChatMessage.prototype.getItemDeleteBody = function() {
  return /** @type{?proto.communication.ItemDeleteMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ItemDeleteMsgBody, 13));
};


/**
 * @param {?proto.communication.ItemDeleteMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setItemDeleteBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearItemDeleteBody = function() {
  return this.setItemDeleteBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasItemDeleteBody = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional DeadlineCreateMsgBody deadline_create_body = 14;
 * @return {?proto.communication.DeadlineCreateMsgBody}
 */
proto.communication.ChatMessage.prototype.getDeadlineCreateBody = function() {
  return /** @type{?proto.communication.DeadlineCreateMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.DeadlineCreateMsgBody, 14));
};


/**
 * @param {?proto.communication.DeadlineCreateMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setDeadlineCreateBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearDeadlineCreateBody = function() {
  return this.setDeadlineCreateBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasDeadlineCreateBody = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional DeadlineDeleteMsgBody deadline_delete_body = 15;
 * @return {?proto.communication.DeadlineDeleteMsgBody}
 */
proto.communication.ChatMessage.prototype.getDeadlineDeleteBody = function() {
  return /** @type{?proto.communication.DeadlineDeleteMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.DeadlineDeleteMsgBody, 15));
};


/**
 * @param {?proto.communication.DeadlineDeleteMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setDeadlineDeleteBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearDeadlineDeleteBody = function() {
  return this.setDeadlineDeleteBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasDeadlineDeleteBody = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional DeadlineItemMsgBody deadline_item_body = 16;
 * @return {?proto.communication.DeadlineItemMsgBody}
 */
proto.communication.ChatMessage.prototype.getDeadlineItemBody = function() {
  return /** @type{?proto.communication.DeadlineItemMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.DeadlineItemMsgBody, 16));
};


/**
 * @param {?proto.communication.DeadlineItemMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setDeadlineItemBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearDeadlineItemBody = function() {
  return this.setDeadlineItemBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasDeadlineItemBody = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ContractSignMsgBody contract_sign_body = 17;
 * @return {?proto.communication.ContractSignMsgBody}
 */
proto.communication.ChatMessage.prototype.getContractSignBody = function() {
  return /** @type{?proto.communication.ContractSignMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ContractSignMsgBody, 17));
};


/**
 * @param {?proto.communication.ContractSignMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setContractSignBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearContractSignBody = function() {
  return this.setContractSignBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasContractSignBody = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ContractLockMsgBody contract_lock_body = 18;
 * @return {?proto.communication.ContractLockMsgBody}
 */
proto.communication.ChatMessage.prototype.getContractLockBody = function() {
  return /** @type{?proto.communication.ContractLockMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ContractLockMsgBody, 18));
};


/**
 * @param {?proto.communication.ContractLockMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setContractLockBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearContractLockBody = function() {
  return this.setContractLockBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasContractLockBody = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ContractSettleMsgBody contract_settle_body = 19;
 * @return {?proto.communication.ContractSettleMsgBody}
 */
proto.communication.ChatMessage.prototype.getContractSettleBody = function() {
  return /** @type{?proto.communication.ContractSettleMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ContractSettleMsgBody, 19));
};


/**
 * @param {?proto.communication.ContractSettleMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setContractSettleBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearContractSettleBody = function() {
  return this.setContractSettleBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasContractSettleBody = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ContractSettleItemMsgBody settle_item_body = 20;
 * @return {?proto.communication.ContractSettleItemMsgBody}
 */
proto.communication.ChatMessage.prototype.getSettleItemBody = function() {
  return /** @type{?proto.communication.ContractSettleItemMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ContractSettleItemMsgBody, 20));
};


/**
 * @param {?proto.communication.ContractSettleItemMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setSettleItemBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearSettleItemBody = function() {
  return this.setSettleItemBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasSettleItemBody = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional AdminMsgBody request_admin_body = 24;
 * @return {?proto.communication.AdminMsgBody}
 */
proto.communication.ChatMessage.prototype.getRequestAdminBody = function() {
  return /** @type{?proto.communication.AdminMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.AdminMsgBody, 24));
};


/**
 * @param {?proto.communication.AdminMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setRequestAdminBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 24, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearRequestAdminBody = function() {
  return this.setRequestAdminBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasRequestAdminBody = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional AdminMsgBody resolve_admin_body = 25;
 * @return {?proto.communication.AdminMsgBody}
 */
proto.communication.ChatMessage.prototype.getResolveAdminBody = function() {
  return /** @type{?proto.communication.AdminMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.AdminMsgBody, 25));
};


/**
 * @param {?proto.communication.AdminMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setResolveAdminBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 25, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearResolveAdminBody = function() {
  return this.setResolveAdminBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasResolveAdminBody = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional FinalizeMsgBody finalize_body = 26;
 * @return {?proto.communication.FinalizeMsgBody}
 */
proto.communication.ChatMessage.prototype.getFinalizeBody = function() {
  return /** @type{?proto.communication.FinalizeMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.FinalizeMsgBody, 26));
};


/**
 * @param {?proto.communication.FinalizeMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setFinalizeBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 26, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearFinalizeBody = function() {
  return this.setFinalizeBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasFinalizeBody = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional DeadlineExpireMsgBody deadline_expire_body = 27;
 * @return {?proto.communication.DeadlineExpireMsgBody}
 */
proto.communication.ChatMessage.prototype.getDeadlineExpireBody = function() {
  return /** @type{?proto.communication.DeadlineExpireMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.DeadlineExpireMsgBody, 27));
};


/**
 * @param {?proto.communication.DeadlineExpireMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setDeadlineExpireBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearDeadlineExpireBody = function() {
  return this.setDeadlineExpireBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasDeadlineExpireBody = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional DeadlineSettledMsgBody deadline_settled_body = 39;
 * @return {?proto.communication.DeadlineSettledMsgBody}
 */
proto.communication.ChatMessage.prototype.getDeadlineSettledBody = function() {
  return /** @type{?proto.communication.DeadlineSettledMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.DeadlineSettledMsgBody, 39));
};


/**
 * @param {?proto.communication.DeadlineSettledMsgBody|undefined} value
 * @return {!proto.communication.ChatMessage} returns this
*/
proto.communication.ChatMessage.prototype.setDeadlineSettledBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 39, proto.communication.ChatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ChatMessage} returns this
 */
proto.communication.ChatMessage.prototype.clearDeadlineSettledBody = function() {
  return this.setDeadlineSettledBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ChatMessage.prototype.hasDeadlineSettledBody = function() {
  return jspb.Message.getField(this, 39) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ReadReceiptEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ReadReceiptEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ReadReceiptEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ReadReceiptEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    read: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ReadReceiptEntity}
 */
proto.communication.ReadReceiptEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ReadReceiptEntity;
  return proto.communication.ReadReceiptEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ReadReceiptEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ReadReceiptEntity}
 */
proto.communication.ReadReceiptEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ReadReceiptEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ReadReceiptEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ReadReceiptEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ReadReceiptEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRead();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ReadReceiptEntity.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ReadReceiptEntity} returns this
 */
proto.communication.ReadReceiptEntity.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool read = 2;
 * @return {boolean}
 */
proto.communication.ReadReceiptEntity.prototype.getRead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ReadReceiptEntity} returns this
 */
proto.communication.ReadReceiptEntity.prototype.setRead = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ChatLabel.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ChatLabel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ChatLabel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatLabel.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    itemId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ChatLabel}
 */
proto.communication.ChatLabel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ChatLabel;
  return proto.communication.ChatLabel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ChatLabel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ChatLabel}
 */
proto.communication.ChatLabel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ChatLabel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ChatLabel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ChatLabel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatLabel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 type = 1;
 * @return {number}
 */
proto.communication.ChatLabel.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ChatLabel} returns this
 */
proto.communication.ChatLabel.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.communication.ChatLabel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ChatLabel} returns this
 */
proto.communication.ChatLabel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string item_id = 3;
 * @return {string}
 */
proto.communication.ChatLabel.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ChatLabel} returns this
 */
proto.communication.ChatLabel.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.CommentMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.CommentMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.CommentMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.CommentMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.CommentMsgBody}
 */
proto.communication.CommentMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.CommentMsgBody;
  return proto.communication.CommentMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.CommentMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.CommentMsgBody}
 */
proto.communication.CommentMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.CommentMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.CommentMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.CommentMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.CommentMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.communication.CommentMsgBody.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.CommentMsgBody} returns this
 */
proto.communication.CommentMsgBody.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ItemCreateMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ItemCreateMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ItemCreateMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ItemCreateMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && communication_contract_pb.ItemEntity.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ItemCreateMsgBody}
 */
proto.communication.ItemCreateMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ItemCreateMsgBody;
  return proto.communication.ItemCreateMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ItemCreateMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ItemCreateMsgBody}
 */
proto.communication.ItemCreateMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new communication_contract_pb.ItemEntity;
      reader.readMessage(value,communication_contract_pb.ItemEntity.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ItemCreateMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ItemCreateMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ItemCreateMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ItemCreateMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      communication_contract_pb.ItemEntity.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional ItemEntity item = 1;
 * @return {?proto.communication.ItemEntity}
 */
proto.communication.ItemCreateMsgBody.prototype.getItem = function() {
  return /** @type{?proto.communication.ItemEntity} */ (
    jspb.Message.getWrapperField(this, communication_contract_pb.ItemEntity, 1));
};


/**
 * @param {?proto.communication.ItemEntity|undefined} value
 * @return {!proto.communication.ItemCreateMsgBody} returns this
*/
proto.communication.ItemCreateMsgBody.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ItemCreateMsgBody} returns this
 */
proto.communication.ItemCreateMsgBody.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ItemCreateMsgBody.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.ItemCreateMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemCreateMsgBody} returns this
 */
proto.communication.ItemCreateMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.ItemCreateMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ItemCreateMsgBody} returns this
 */
proto.communication.ItemCreateMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.ItemCreateMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemCreateMsgBody} returns this
 */
proto.communication.ItemCreateMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.ItemCreateMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemCreateMsgBody} returns this
 */
proto.communication.ItemCreateMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.ItemCreateMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemCreateMsgBody} returns this
 */
proto.communication.ItemCreateMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ItemDeleteMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ItemDeleteMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ItemDeleteMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ItemDeleteMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && communication_contract_pb.ItemEntity.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ItemDeleteMsgBody}
 */
proto.communication.ItemDeleteMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ItemDeleteMsgBody;
  return proto.communication.ItemDeleteMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ItemDeleteMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ItemDeleteMsgBody}
 */
proto.communication.ItemDeleteMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new communication_contract_pb.ItemEntity;
      reader.readMessage(value,communication_contract_pb.ItemEntity.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ItemDeleteMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ItemDeleteMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ItemDeleteMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ItemDeleteMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      communication_contract_pb.ItemEntity.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional ItemEntity item = 1;
 * @return {?proto.communication.ItemEntity}
 */
proto.communication.ItemDeleteMsgBody.prototype.getItem = function() {
  return /** @type{?proto.communication.ItemEntity} */ (
    jspb.Message.getWrapperField(this, communication_contract_pb.ItemEntity, 1));
};


/**
 * @param {?proto.communication.ItemEntity|undefined} value
 * @return {!proto.communication.ItemDeleteMsgBody} returns this
*/
proto.communication.ItemDeleteMsgBody.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ItemDeleteMsgBody} returns this
 */
proto.communication.ItemDeleteMsgBody.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ItemDeleteMsgBody.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.ItemDeleteMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemDeleteMsgBody} returns this
 */
proto.communication.ItemDeleteMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.ItemDeleteMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ItemDeleteMsgBody} returns this
 */
proto.communication.ItemDeleteMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.ItemDeleteMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemDeleteMsgBody} returns this
 */
proto.communication.ItemDeleteMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.ItemDeleteMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemDeleteMsgBody} returns this
 */
proto.communication.ItemDeleteMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.ItemDeleteMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemDeleteMsgBody} returns this
 */
proto.communication.ItemDeleteMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DeadlineCreateMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DeadlineCreateMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DeadlineCreateMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineCreateMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    deadline: (f = msg.getDeadline()) && communication_contract_pb.DeadlineEntity.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DeadlineCreateMsgBody}
 */
proto.communication.DeadlineCreateMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DeadlineCreateMsgBody;
  return proto.communication.DeadlineCreateMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DeadlineCreateMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DeadlineCreateMsgBody}
 */
proto.communication.DeadlineCreateMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new communication_contract_pb.DeadlineEntity;
      reader.readMessage(value,communication_contract_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.setDeadline(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DeadlineCreateMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DeadlineCreateMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DeadlineCreateMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineCreateMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeadline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      communication_contract_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional DeadlineEntity deadline = 1;
 * @return {?proto.communication.DeadlineEntity}
 */
proto.communication.DeadlineCreateMsgBody.prototype.getDeadline = function() {
  return /** @type{?proto.communication.DeadlineEntity} */ (
    jspb.Message.getWrapperField(this, communication_contract_pb.DeadlineEntity, 1));
};


/**
 * @param {?proto.communication.DeadlineEntity|undefined} value
 * @return {!proto.communication.DeadlineCreateMsgBody} returns this
*/
proto.communication.DeadlineCreateMsgBody.prototype.setDeadline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.DeadlineCreateMsgBody} returns this
 */
proto.communication.DeadlineCreateMsgBody.prototype.clearDeadline = function() {
  return this.setDeadline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.DeadlineCreateMsgBody.prototype.hasDeadline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.DeadlineCreateMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineCreateMsgBody} returns this
 */
proto.communication.DeadlineCreateMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.DeadlineCreateMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.DeadlineCreateMsgBody} returns this
 */
proto.communication.DeadlineCreateMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.DeadlineCreateMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineCreateMsgBody} returns this
 */
proto.communication.DeadlineCreateMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.DeadlineCreateMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineCreateMsgBody} returns this
 */
proto.communication.DeadlineCreateMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.DeadlineCreateMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineCreateMsgBody} returns this
 */
proto.communication.DeadlineCreateMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DeadlineDeleteMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DeadlineDeleteMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineDeleteMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    deadline: (f = msg.getDeadline()) && communication_contract_pb.DeadlineEntity.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DeadlineDeleteMsgBody}
 */
proto.communication.DeadlineDeleteMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DeadlineDeleteMsgBody;
  return proto.communication.DeadlineDeleteMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DeadlineDeleteMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DeadlineDeleteMsgBody}
 */
proto.communication.DeadlineDeleteMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new communication_contract_pb.DeadlineEntity;
      reader.readMessage(value,communication_contract_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.setDeadline(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DeadlineDeleteMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DeadlineDeleteMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineDeleteMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeadline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      communication_contract_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional DeadlineEntity deadline = 1;
 * @return {?proto.communication.DeadlineEntity}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.getDeadline = function() {
  return /** @type{?proto.communication.DeadlineEntity} */ (
    jspb.Message.getWrapperField(this, communication_contract_pb.DeadlineEntity, 1));
};


/**
 * @param {?proto.communication.DeadlineEntity|undefined} value
 * @return {!proto.communication.DeadlineDeleteMsgBody} returns this
*/
proto.communication.DeadlineDeleteMsgBody.prototype.setDeadline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.DeadlineDeleteMsgBody} returns this
 */
proto.communication.DeadlineDeleteMsgBody.prototype.clearDeadline = function() {
  return this.setDeadline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.hasDeadline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineDeleteMsgBody} returns this
 */
proto.communication.DeadlineDeleteMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.DeadlineDeleteMsgBody} returns this
 */
proto.communication.DeadlineDeleteMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineDeleteMsgBody} returns this
 */
proto.communication.DeadlineDeleteMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineDeleteMsgBody} returns this
 */
proto.communication.DeadlineDeleteMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.DeadlineDeleteMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineDeleteMsgBody} returns this
 */
proto.communication.DeadlineDeleteMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ItemMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ItemMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ItemMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ItemMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    newVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    oldVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ItemMsgBody}
 */
proto.communication.ItemMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ItemMsgBody;
  return proto.communication.ItemMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ItemMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ItemMsgBody}
 */
proto.communication.ItemMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ItemMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ItemMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ItemMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ItemMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNewVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOldVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional string item_id = 8;
 * @return {string}
 */
proto.communication.ItemMsgBody.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string new_version = 1;
 * @return {string}
 */
proto.communication.ItemMsgBody.prototype.getNewVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setNewVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string old_version = 2;
 * @return {string}
 */
proto.communication.ItemMsgBody.prototype.getOldVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setOldVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.ItemMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.ItemMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.ItemMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.ItemMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.ItemMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ItemMsgBody} returns this
 */
proto.communication.ItemMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DateMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DateMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DateMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DateMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    deadlineId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    newVersion: (f = msg.getNewVersion()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    oldVersion: (f = msg.getOldVersion()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DateMsgBody}
 */
proto.communication.DateMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DateMsgBody;
  return proto.communication.DateMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DateMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DateMsgBody}
 */
proto.communication.DateMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setNewVersion(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOldVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DateMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DateMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DateMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DateMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNewVersion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOldVersion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional string deadline_id = 8;
 * @return {string}
 */
proto.communication.DateMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp new_version = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.communication.DateMsgBody.prototype.getNewVersion = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.communication.DateMsgBody} returns this
*/
proto.communication.DateMsgBody.prototype.setNewVersion = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.clearNewVersion = function() {
  return this.setNewVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.DateMsgBody.prototype.hasNewVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp old_version = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.communication.DateMsgBody.prototype.getOldVersion = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.communication.DateMsgBody} returns this
*/
proto.communication.DateMsgBody.prototype.setOldVersion = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.clearOldVersion = function() {
  return this.setOldVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.DateMsgBody.prototype.hasOldVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.DateMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.DateMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.DateMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.DateMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.DateMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DateMsgBody} returns this
 */
proto.communication.DateMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.PayoutMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.PayoutMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.PayoutMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.PayoutMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    deadlineId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    newVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    oldVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.PayoutMsgBody}
 */
proto.communication.PayoutMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.PayoutMsgBody;
  return proto.communication.PayoutMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.PayoutMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.PayoutMsgBody}
 */
proto.communication.PayoutMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNewVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOldVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.PayoutMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.PayoutMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.PayoutMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.PayoutMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNewVersion();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOldVersion();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional string deadline_id = 8;
 * @return {string}
 */
proto.communication.PayoutMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 new_version = 1;
 * @return {number}
 */
proto.communication.PayoutMsgBody.prototype.getNewVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setNewVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 old_version = 2;
 * @return {number}
 */
proto.communication.PayoutMsgBody.prototype.getOldVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setOldVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.PayoutMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.PayoutMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.PayoutMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.PayoutMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.PayoutMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PayoutMsgBody} returns this
 */
proto.communication.PayoutMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.PriceMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.PriceMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.PriceMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.PriceMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    newVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    oldVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.PriceMsgBody}
 */
proto.communication.PriceMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.PriceMsgBody;
  return proto.communication.PriceMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.PriceMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.PriceMsgBody}
 */
proto.communication.PriceMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNewVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOldVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.PriceMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.PriceMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.PriceMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.PriceMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewVersion();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOldVersion();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional int64 new_version = 1;
 * @return {number}
 */
proto.communication.PriceMsgBody.prototype.getNewVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceMsgBody} returns this
 */
proto.communication.PriceMsgBody.prototype.setNewVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 old_version = 2;
 * @return {number}
 */
proto.communication.PriceMsgBody.prototype.getOldVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceMsgBody} returns this
 */
proto.communication.PriceMsgBody.prototype.setOldVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.PriceMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceMsgBody} returns this
 */
proto.communication.PriceMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.PriceMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.PriceMsgBody} returns this
 */
proto.communication.PriceMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.PriceMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceMsgBody} returns this
 */
proto.communication.PriceMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.PriceMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceMsgBody} returns this
 */
proto.communication.PriceMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.PriceMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceMsgBody} returns this
 */
proto.communication.PriceMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.DeadlineItemMsgBody.repeatedFields_ = [11,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DeadlineItemMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DeadlineItemMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DeadlineItemMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineItemMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    deadline: (f = msg.getDeadline()) && communication_contract_pb.DeadlineEntity.toObject(includeInstance, f),
    deadlineId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    newItemStatesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    newItemsList: jspb.Message.toObjectList(msg.getNewItemsList(),
    communication_contract_pb.ItemNub.toObject, includeInstance),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DeadlineItemMsgBody}
 */
proto.communication.DeadlineItemMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DeadlineItemMsgBody;
  return proto.communication.DeadlineItemMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DeadlineItemMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DeadlineItemMsgBody}
 */
proto.communication.DeadlineItemMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new communication_contract_pb.DeadlineEntity;
      reader.readMessage(value,communication_contract_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.setDeadline(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    case 11:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNewItemStates(values[i]);
      }
      break;
    case 14:
      var value = new communication_contract_pb.ItemNub;
      reader.readMessage(value,communication_contract_pb.ItemNub.deserializeBinaryFromReader);
      msg.addNewItems(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DeadlineItemMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DeadlineItemMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DeadlineItemMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineItemMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeadline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      communication_contract_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getNewItemStatesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      11,
      f
    );
  }
  f = message.getNewItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      communication_contract_pb.ItemNub.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional DeadlineEntity deadline = 1;
 * @return {?proto.communication.DeadlineEntity}
 */
proto.communication.DeadlineItemMsgBody.prototype.getDeadline = function() {
  return /** @type{?proto.communication.DeadlineEntity} */ (
    jspb.Message.getWrapperField(this, communication_contract_pb.DeadlineEntity, 1));
};


/**
 * @param {?proto.communication.DeadlineEntity|undefined} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
*/
proto.communication.DeadlineItemMsgBody.prototype.setDeadline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.clearDeadline = function() {
  return this.setDeadline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.DeadlineItemMsgBody.prototype.hasDeadline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string deadline_id = 10;
 * @return {string}
 */
proto.communication.DeadlineItemMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated uint32 new_item_states = 11;
 * @return {!Array<number>}
 */
proto.communication.DeadlineItemMsgBody.prototype.getNewItemStatesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.setNewItemStatesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.addNewItemStates = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.clearNewItemStatesList = function() {
  return this.setNewItemStatesList([]);
};


/**
 * repeated ItemNub new_items = 14;
 * @return {!Array<!proto.communication.ItemNub>}
 */
proto.communication.DeadlineItemMsgBody.prototype.getNewItemsList = function() {
  return /** @type{!Array<!proto.communication.ItemNub>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_contract_pb.ItemNub, 14));
};


/**
 * @param {!Array<!proto.communication.ItemNub>} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
*/
proto.communication.DeadlineItemMsgBody.prototype.setNewItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.communication.ItemNub=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ItemNub}
 */
proto.communication.DeadlineItemMsgBody.prototype.addNewItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.communication.ItemNub, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.clearNewItemsList = function() {
  return this.setNewItemsList([]);
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.communication.DeadlineItemMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool resolved = 4;
 * @return {boolean}
 */
proto.communication.DeadlineItemMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.DeadlineItemMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.DeadlineItemMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.DeadlineItemMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineItemMsgBody} returns this
 */
proto.communication.DeadlineItemMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractSignMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractSignMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractSignMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractSignMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractStage: jspb.Message.getFieldWithDefault(msg, 1, 0),
    signerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractSignMsgBody}
 */
proto.communication.ContractSignMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractSignMsgBody;
  return proto.communication.ContractSignMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractSignMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractSignMsgBody}
 */
proto.communication.ContractSignMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContractStage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractSignMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractSignMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractSignMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractSignMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractStage();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSignerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 contract_stage = 1;
 * @return {number}
 */
proto.communication.ContractSignMsgBody.prototype.getContractStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractSignMsgBody} returns this
 */
proto.communication.ContractSignMsgBody.prototype.setContractStage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string signer_id = 2;
 * @return {string}
 */
proto.communication.ContractSignMsgBody.prototype.getSignerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSignMsgBody} returns this
 */
proto.communication.ContractSignMsgBody.prototype.setSignerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contract_id = 3;
 * @return {string}
 */
proto.communication.ContractSignMsgBody.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSignMsgBody} returns this
 */
proto.communication.ContractSignMsgBody.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractSettleItemMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractSettleItemMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractSettleItemMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractSettleItemMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deadlineId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    itemId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    itemWorkerSettle: jspb.Message.getFieldWithDefault(msg, 5, 0),
    itemBuyerSettle: jspb.Message.getFieldWithDefault(msg, 6, 0),
    itemAdminSettle: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractSettleItemMsgBody}
 */
proto.communication.ContractSettleItemMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractSettleItemMsgBody;
  return proto.communication.ContractSettleItemMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractSettleItemMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractSettleItemMsgBody}
 */
proto.communication.ContractSettleItemMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemWorkerSettle(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemBuyerSettle(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemAdminSettle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractSettleItemMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractSettleItemMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractSettleItemMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractSettleItemMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getItemWorkerSettle();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getItemBuyerSettle();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getItemAdminSettle();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.ContractSettleItemMsgBody.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSettleItemMsgBody} returns this
 */
proto.communication.ContractSettleItemMsgBody.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string deadline_id = 3;
 * @return {string}
 */
proto.communication.ContractSettleItemMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSettleItemMsgBody} returns this
 */
proto.communication.ContractSettleItemMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string item_id = 4;
 * @return {string}
 */
proto.communication.ContractSettleItemMsgBody.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSettleItemMsgBody} returns this
 */
proto.communication.ContractSettleItemMsgBody.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 item_worker_settle = 5;
 * @return {number}
 */
proto.communication.ContractSettleItemMsgBody.prototype.getItemWorkerSettle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractSettleItemMsgBody} returns this
 */
proto.communication.ContractSettleItemMsgBody.prototype.setItemWorkerSettle = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 item_buyer_settle = 6;
 * @return {number}
 */
proto.communication.ContractSettleItemMsgBody.prototype.getItemBuyerSettle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractSettleItemMsgBody} returns this
 */
proto.communication.ContractSettleItemMsgBody.prototype.setItemBuyerSettle = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 item_admin_settle = 7;
 * @return {number}
 */
proto.communication.ContractSettleItemMsgBody.prototype.getItemAdminSettle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractSettleItemMsgBody} returns this
 */
proto.communication.ContractSettleItemMsgBody.prototype.setItemAdminSettle = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractSettleMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractSettleMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractSettleMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractSettleMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractStage: jspb.Message.getFieldWithDefault(msg, 1, 0),
    signerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deadlineId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractSettleMsgBody}
 */
proto.communication.ContractSettleMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractSettleMsgBody;
  return proto.communication.ContractSettleMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractSettleMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractSettleMsgBody}
 */
proto.communication.ContractSettleMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContractStage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractSettleMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractSettleMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractSettleMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractSettleMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractStage();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSignerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 contract_stage = 1;
 * @return {number}
 */
proto.communication.ContractSettleMsgBody.prototype.getContractStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractSettleMsgBody} returns this
 */
proto.communication.ContractSettleMsgBody.prototype.setContractStage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string signer_id = 2;
 * @return {string}
 */
proto.communication.ContractSettleMsgBody.prototype.getSignerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSettleMsgBody} returns this
 */
proto.communication.ContractSettleMsgBody.prototype.setSignerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contract_id = 3;
 * @return {string}
 */
proto.communication.ContractSettleMsgBody.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSettleMsgBody} returns this
 */
proto.communication.ContractSettleMsgBody.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string deadline_id = 4;
 * @return {string}
 */
proto.communication.ContractSettleMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractSettleMsgBody} returns this
 */
proto.communication.ContractSettleMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractLockMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractLockMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractLockMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractLockMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractLock: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    contractId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractLockMsgBody}
 */
proto.communication.ContractLockMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractLockMsgBody;
  return proto.communication.ContractLockMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractLockMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractLockMsgBody}
 */
proto.communication.ContractLockMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractLock(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractLockMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractLockMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractLockMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractLockMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractLock();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional bool contract_lock = 1;
 * @return {boolean}
 */
proto.communication.ContractLockMsgBody.prototype.getContractLock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractLockMsgBody} returns this
 */
proto.communication.ContractLockMsgBody.prototype.setContractLock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string contract_id = 3;
 * @return {string}
 */
proto.communication.ContractLockMsgBody.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractLockMsgBody} returns this
 */
proto.communication.ContractLockMsgBody.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 type = 4;
 * @return {number}
 */
proto.communication.ContractLockMsgBody.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractLockMsgBody} returns this
 */
proto.communication.ContractLockMsgBody.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool resolved = 5;
 * @return {boolean}
 */
proto.communication.ContractLockMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractLockMsgBody} returns this
 */
proto.communication.ContractLockMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional uint32 resol_status = 6;
 * @return {number}
 */
proto.communication.ContractLockMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractLockMsgBody} returns this
 */
proto.communication.ContractLockMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 worker_status = 7;
 * @return {number}
 */
proto.communication.ContractLockMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractLockMsgBody} returns this
 */
proto.communication.ContractLockMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 buyer_status = 8;
 * @return {number}
 */
proto.communication.ContractLockMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractLockMsgBody} returns this
 */
proto.communication.ContractLockMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.AdminMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.AdminMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.AdminMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.AdminMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.AdminMsgBody}
 */
proto.communication.AdminMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.AdminMsgBody;
  return proto.communication.AdminMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.AdminMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.AdminMsgBody}
 */
proto.communication.AdminMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.AdminMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.AdminMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.AdminMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.AdminMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.FinalizeMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.FinalizeMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.FinalizeMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FinalizeMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deadlineId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    confirmed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    undo: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    contractStage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    workerSettled: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    workerConfirmed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    buyerSettled: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    buyerConfirmed: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.FinalizeMsgBody}
 */
proto.communication.FinalizeMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.FinalizeMsgBody;
  return proto.communication.FinalizeMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.FinalizeMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.FinalizeMsgBody}
 */
proto.communication.FinalizeMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfirmed(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUndo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContractStage(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWorkerSettled(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWorkerConfirmed(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyerSettled(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyerConfirmed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.FinalizeMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.FinalizeMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.FinalizeMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FinalizeMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getConfirmed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUndo();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getContractStage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getWorkerSettled();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getWorkerConfirmed();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBuyerSettled();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getBuyerConfirmed();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.communication.FinalizeMsgBody.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string deadline_id = 9;
 * @return {string}
 */
proto.communication.FinalizeMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool confirmed = 3;
 * @return {boolean}
 */
proto.communication.FinalizeMsgBody.prototype.getConfirmed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setConfirmed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool undo = 10;
 * @return {boolean}
 */
proto.communication.FinalizeMsgBody.prototype.getUndo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setUndo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional uint32 contract_stage = 4;
 * @return {number}
 */
proto.communication.FinalizeMsgBody.prototype.getContractStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setContractStage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool worker_settled = 5;
 * @return {boolean}
 */
proto.communication.FinalizeMsgBody.prototype.getWorkerSettled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setWorkerSettled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool worker_confirmed = 6;
 * @return {boolean}
 */
proto.communication.FinalizeMsgBody.prototype.getWorkerConfirmed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setWorkerConfirmed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool buyer_settled = 7;
 * @return {boolean}
 */
proto.communication.FinalizeMsgBody.prototype.getBuyerSettled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setBuyerSettled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool buyer_confirmed = 8;
 * @return {boolean}
 */
proto.communication.FinalizeMsgBody.prototype.getBuyerConfirmed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.FinalizeMsgBody} returns this
 */
proto.communication.FinalizeMsgBody.prototype.setBuyerConfirmed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DeadlineExpireMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DeadlineExpireMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DeadlineExpireMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineExpireMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deadlineId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DeadlineExpireMsgBody}
 */
proto.communication.DeadlineExpireMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DeadlineExpireMsgBody;
  return proto.communication.DeadlineExpireMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DeadlineExpireMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DeadlineExpireMsgBody}
 */
proto.communication.DeadlineExpireMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DeadlineExpireMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DeadlineExpireMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DeadlineExpireMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineExpireMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.communication.DeadlineExpireMsgBody.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DeadlineExpireMsgBody} returns this
 */
proto.communication.DeadlineExpireMsgBody.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string deadline_id = 2;
 * @return {string}
 */
proto.communication.DeadlineExpireMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DeadlineExpireMsgBody} returns this
 */
proto.communication.DeadlineExpireMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DeadlineSettledMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DeadlineSettledMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DeadlineSettledMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineSettledMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractStage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deadlineId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DeadlineSettledMsgBody}
 */
proto.communication.DeadlineSettledMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DeadlineSettledMsgBody;
  return proto.communication.DeadlineSettledMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DeadlineSettledMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DeadlineSettledMsgBody}
 */
proto.communication.DeadlineSettledMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContractStage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadlineId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DeadlineSettledMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DeadlineSettledMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DeadlineSettledMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DeadlineSettledMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractStage();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.communication.DeadlineSettledMsgBody.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DeadlineSettledMsgBody} returns this
 */
proto.communication.DeadlineSettledMsgBody.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 contract_stage = 3;
 * @return {number}
 */
proto.communication.DeadlineSettledMsgBody.prototype.getContractStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.DeadlineSettledMsgBody} returns this
 */
proto.communication.DeadlineSettledMsgBody.prototype.setContractStage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string deadline_id = 2;
 * @return {string}
 */
proto.communication.DeadlineSettledMsgBody.prototype.getDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DeadlineSettledMsgBody} returns this
 */
proto.communication.DeadlineSettledMsgBody.prototype.setDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.RevMsgBody.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.RevMsgBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.RevMsgBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.RevMsgBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resolved: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    resolStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    workerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buyerStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),
    adminStatus: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.RevMsgBody}
 */
proto.communication.RevMsgBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.RevMsgBody;
  return proto.communication.RevMsgBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.RevMsgBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.RevMsgBody}
 */
proto.communication.RevMsgBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWorkerStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuyerStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAdminStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.RevMsgBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.RevMsgBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.RevMsgBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.RevMsgBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResolved();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getResolStatus();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getWorkerStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBuyerStatus();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getAdminStatus();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional string msg_id = 1;
 * @return {string}
 */
proto.communication.RevMsgBody.prototype.getMsgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.RevMsgBody} returns this
 */
proto.communication.RevMsgBody.prototype.setMsgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool resolved = 2;
 * @return {boolean}
 */
proto.communication.RevMsgBody.prototype.getResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.RevMsgBody} returns this
 */
proto.communication.RevMsgBody.prototype.setResolved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint32 resol_status = 7;
 * @return {number}
 */
proto.communication.RevMsgBody.prototype.getResolStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.RevMsgBody} returns this
 */
proto.communication.RevMsgBody.prototype.setResolStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 worker_status = 5;
 * @return {number}
 */
proto.communication.RevMsgBody.prototype.getWorkerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.RevMsgBody} returns this
 */
proto.communication.RevMsgBody.prototype.setWorkerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 buyer_status = 6;
 * @return {number}
 */
proto.communication.RevMsgBody.prototype.getBuyerStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.RevMsgBody} returns this
 */
proto.communication.RevMsgBody.prototype.setBuyerStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 admin_status = 8;
 * @return {number}
 */
proto.communication.RevMsgBody.prototype.getAdminStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.RevMsgBody} returns this
 */
proto.communication.RevMsgBody.prototype.setAdminStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.UserJoin.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.UserJoin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.UserJoin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserJoin.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roomId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.UserJoin}
 */
proto.communication.UserJoin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.UserJoin;
  return proto.communication.UserJoin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.UserJoin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.UserJoin}
 */
proto.communication.UserJoin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.UserJoin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.UserJoin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.UserJoin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserJoin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.UserJoin.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.UserJoin} returns this
 */
proto.communication.UserJoin.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string room_id = 2;
 * @return {string}
 */
proto.communication.UserJoin.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.UserJoin} returns this
 */
proto.communication.UserJoin.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.UserLeave.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.UserLeave.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.UserLeave} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserLeave.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roomId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.UserLeave}
 */
proto.communication.UserLeave.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.UserLeave;
  return proto.communication.UserLeave.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.UserLeave} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.UserLeave}
 */
proto.communication.UserLeave.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.UserLeave.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.UserLeave.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.UserLeave} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserLeave.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.UserLeave.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.UserLeave} returns this
 */
proto.communication.UserLeave.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string room_id = 2;
 * @return {string}
 */
proto.communication.UserLeave.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.UserLeave} returns this
 */
proto.communication.UserLeave.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.UserClose.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.UserClose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.UserClose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserClose.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.UserClose}
 */
proto.communication.UserClose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.UserClose;
  return proto.communication.UserClose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.UserClose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.UserClose}
 */
proto.communication.UserClose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.UserClose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.UserClose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.UserClose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.UserClose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.communication.SendRequest.oneofGroups_ = [[6,7,11,8,9]];

/**
 * @enum {number}
 */
proto.communication.SendRequest.BodyCase = {
  BODY_NOT_SET: 0,
  COMMENT_BODY: 6,
  PAYOUT_BODY: 7,
  DATE_BODY: 11,
  PRICE_BODY: 8,
  ITEM_BODY: 9
};

/**
 * @return {proto.communication.SendRequest.BodyCase}
 */
proto.communication.SendRequest.prototype.getBodyCase = function() {
  return /** @type {proto.communication.SendRequest.BodyCase} */(jspb.Message.computeOneofCase(this, proto.communication.SendRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.SendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.SendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.SendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roomId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    method: jspb.Message.getFieldWithDefault(msg, 10, 0),
    commentBody: (f = msg.getCommentBody()) && proto.communication.CommentMsgBody.toObject(includeInstance, f),
    payoutBody: (f = msg.getPayoutBody()) && proto.communication.PayoutMsgBody.toObject(includeInstance, f),
    dateBody: (f = msg.getDateBody()) && proto.communication.DateMsgBody.toObject(includeInstance, f),
    priceBody: (f = msg.getPriceBody()) && proto.communication.PriceMsgBody.toObject(includeInstance, f),
    itemBody: (f = msg.getItemBody()) && proto.communication.ItemMsgBody.toObject(includeInstance, f),
    label: (f = msg.getLabel()) && proto.communication.ChatLabel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.SendRequest}
 */
proto.communication.SendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.SendRequest;
  return proto.communication.SendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.SendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.SendRequest}
 */
proto.communication.SendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMethod(value);
      break;
    case 6:
      var value = new proto.communication.CommentMsgBody;
      reader.readMessage(value,proto.communication.CommentMsgBody.deserializeBinaryFromReader);
      msg.setCommentBody(value);
      break;
    case 7:
      var value = new proto.communication.PayoutMsgBody;
      reader.readMessage(value,proto.communication.PayoutMsgBody.deserializeBinaryFromReader);
      msg.setPayoutBody(value);
      break;
    case 11:
      var value = new proto.communication.DateMsgBody;
      reader.readMessage(value,proto.communication.DateMsgBody.deserializeBinaryFromReader);
      msg.setDateBody(value);
      break;
    case 8:
      var value = new proto.communication.PriceMsgBody;
      reader.readMessage(value,proto.communication.PriceMsgBody.deserializeBinaryFromReader);
      msg.setPriceBody(value);
      break;
    case 9:
      var value = new proto.communication.ItemMsgBody;
      reader.readMessage(value,proto.communication.ItemMsgBody.deserializeBinaryFromReader);
      msg.setItemBody(value);
      break;
    case 4:
      var value = new proto.communication.ChatLabel;
      reader.readMessage(value,proto.communication.ChatLabel.deserializeBinaryFromReader);
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.SendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.SendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.SendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getCommentBody();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.communication.CommentMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getPayoutBody();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.communication.PayoutMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getDateBody();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.communication.DateMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getPriceBody();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.communication.PriceMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getItemBody();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.communication.ItemMsgBody.serializeBinaryToWriter
    );
  }
  f = message.getLabel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.communication.ChatLabel.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.SendRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string room_id = 2;
 * @return {string}
 */
proto.communication.SendRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 method = 10;
 * @return {number}
 */
proto.communication.SendRequest.prototype.getMethod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.setMethod = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional CommentMsgBody comment_body = 6;
 * @return {?proto.communication.CommentMsgBody}
 */
proto.communication.SendRequest.prototype.getCommentBody = function() {
  return /** @type{?proto.communication.CommentMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.CommentMsgBody, 6));
};


/**
 * @param {?proto.communication.CommentMsgBody|undefined} value
 * @return {!proto.communication.SendRequest} returns this
*/
proto.communication.SendRequest.prototype.setCommentBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.communication.SendRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.clearCommentBody = function() {
  return this.setCommentBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.SendRequest.prototype.hasCommentBody = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PayoutMsgBody payout_body = 7;
 * @return {?proto.communication.PayoutMsgBody}
 */
proto.communication.SendRequest.prototype.getPayoutBody = function() {
  return /** @type{?proto.communication.PayoutMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.PayoutMsgBody, 7));
};


/**
 * @param {?proto.communication.PayoutMsgBody|undefined} value
 * @return {!proto.communication.SendRequest} returns this
*/
proto.communication.SendRequest.prototype.setPayoutBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.communication.SendRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.clearPayoutBody = function() {
  return this.setPayoutBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.SendRequest.prototype.hasPayoutBody = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DateMsgBody date_body = 11;
 * @return {?proto.communication.DateMsgBody}
 */
proto.communication.SendRequest.prototype.getDateBody = function() {
  return /** @type{?proto.communication.DateMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.DateMsgBody, 11));
};


/**
 * @param {?proto.communication.DateMsgBody|undefined} value
 * @return {!proto.communication.SendRequest} returns this
*/
proto.communication.SendRequest.prototype.setDateBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.communication.SendRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.clearDateBody = function() {
  return this.setDateBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.SendRequest.prototype.hasDateBody = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PriceMsgBody price_body = 8;
 * @return {?proto.communication.PriceMsgBody}
 */
proto.communication.SendRequest.prototype.getPriceBody = function() {
  return /** @type{?proto.communication.PriceMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.PriceMsgBody, 8));
};


/**
 * @param {?proto.communication.PriceMsgBody|undefined} value
 * @return {!proto.communication.SendRequest} returns this
*/
proto.communication.SendRequest.prototype.setPriceBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.communication.SendRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.clearPriceBody = function() {
  return this.setPriceBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.SendRequest.prototype.hasPriceBody = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ItemMsgBody item_body = 9;
 * @return {?proto.communication.ItemMsgBody}
 */
proto.communication.SendRequest.prototype.getItemBody = function() {
  return /** @type{?proto.communication.ItemMsgBody} */ (
    jspb.Message.getWrapperField(this, proto.communication.ItemMsgBody, 9));
};


/**
 * @param {?proto.communication.ItemMsgBody|undefined} value
 * @return {!proto.communication.SendRequest} returns this
*/
proto.communication.SendRequest.prototype.setItemBody = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.communication.SendRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.clearItemBody = function() {
  return this.setItemBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.SendRequest.prototype.hasItemBody = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ChatLabel label = 4;
 * @return {?proto.communication.ChatLabel}
 */
proto.communication.SendRequest.prototype.getLabel = function() {
  return /** @type{?proto.communication.ChatLabel} */ (
    jspb.Message.getWrapperField(this, proto.communication.ChatLabel, 4));
};


/**
 * @param {?proto.communication.ChatLabel|undefined} value
 * @return {!proto.communication.SendRequest} returns this
*/
proto.communication.SendRequest.prototype.setLabel = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.SendRequest} returns this
 */
proto.communication.SendRequest.prototype.clearLabel = function() {
  return this.setLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.SendRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.SendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.SendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.SendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.SendResponse}
 */
proto.communication.SendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.SendResponse;
  return proto.communication.SendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.SendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.SendResponse}
 */
proto.communication.SendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.SendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.SendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.SendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ChatPullRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ChatPullRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ChatPullRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatPullRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ChatPullRequest}
 */
proto.communication.ChatPullRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ChatPullRequest;
  return proto.communication.ChatPullRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ChatPullRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ChatPullRequest}
 */
proto.communication.ChatPullRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ChatPullRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ChatPullRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ChatPullRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatPullRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.communication.ChatPullRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ChatPullRequest} returns this
 */
proto.communication.ChatPullRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.communication.ChatPullRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ChatPullRequest} returns this
 */
proto.communication.ChatPullRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ChatMessageSet.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ChatMessageSet.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ChatMessageSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ChatMessageSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatMessageSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.communication.ChatMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ChatMessageSet}
 */
proto.communication.ChatMessageSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ChatMessageSet;
  return proto.communication.ChatMessageSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ChatMessageSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ChatMessageSet}
 */
proto.communication.ChatMessageSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = new proto.communication.ChatMessage;
      reader.readMessage(value,proto.communication.ChatMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ChatMessageSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ChatMessageSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ChatMessageSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ChatMessageSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.communication.ChatMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.communication.ChatMessageSet.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ChatMessageSet} returns this
 */
proto.communication.ChatMessageSet.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ChatMessage messages = 2;
 * @return {!Array<!proto.communication.ChatMessage>}
 */
proto.communication.ChatMessageSet.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.communication.ChatMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.communication.ChatMessage, 2));
};


/**
 * @param {!Array<!proto.communication.ChatMessage>} value
 * @return {!proto.communication.ChatMessageSet} returns this
*/
proto.communication.ChatMessageSet.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.communication.ChatMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ChatMessage}
 */
proto.communication.ChatMessageSet.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.communication.ChatMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ChatMessageSet} returns this
 */
proto.communication.ChatMessageSet.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.NewMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.NewMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.NewMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.NewMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.NewMessagesRequest}
 */
proto.communication.NewMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.NewMessagesRequest;
  return proto.communication.NewMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.NewMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.NewMessagesRequest}
 */
proto.communication.NewMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.NewMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.NewMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.NewMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.NewMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.NewMessagesRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.NewMessagesRequest} returns this
 */
proto.communication.NewMessagesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.NewMessageEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.NewMessageEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.NewMessageEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.NewMessageEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && proto.communication.ChatMessage.toObject(includeInstance, f),
    contract: (f = msg.getContract()) && communication_contract_pb.ContractNub.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.NewMessageEntity}
 */
proto.communication.NewMessageEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.NewMessageEntity;
  return proto.communication.NewMessageEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.NewMessageEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.NewMessageEntity}
 */
proto.communication.NewMessageEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.communication.ChatMessage;
      reader.readMessage(value,proto.communication.ChatMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 2:
      var value = new communication_contract_pb.ContractNub;
      reader.readMessage(value,communication_contract_pb.ContractNub.deserializeBinaryFromReader);
      msg.setContract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.NewMessageEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.NewMessageEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.NewMessageEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.NewMessageEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.communication.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      communication_contract_pb.ContractNub.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChatMessage message = 1;
 * @return {?proto.communication.ChatMessage}
 */
proto.communication.NewMessageEntity.prototype.getMessage = function() {
  return /** @type{?proto.communication.ChatMessage} */ (
    jspb.Message.getWrapperField(this, proto.communication.ChatMessage, 1));
};


/**
 * @param {?proto.communication.ChatMessage|undefined} value
 * @return {!proto.communication.NewMessageEntity} returns this
*/
proto.communication.NewMessageEntity.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.NewMessageEntity} returns this
 */
proto.communication.NewMessageEntity.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.NewMessageEntity.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ContractNub contract = 2;
 * @return {?proto.communication.ContractNub}
 */
proto.communication.NewMessageEntity.prototype.getContract = function() {
  return /** @type{?proto.communication.ContractNub} */ (
    jspb.Message.getWrapperField(this, communication_contract_pb.ContractNub, 2));
};


/**
 * @param {?proto.communication.ContractNub|undefined} value
 * @return {!proto.communication.NewMessageEntity} returns this
*/
proto.communication.NewMessageEntity.prototype.setContract = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.NewMessageEntity} returns this
 */
proto.communication.NewMessageEntity.prototype.clearContract = function() {
  return this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.NewMessageEntity.prototype.hasContract = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.NewMessageSet.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.NewMessageSet.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.NewMessageSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.NewMessageSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.NewMessageSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.communication.NewMessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.NewMessageSet}
 */
proto.communication.NewMessageSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.NewMessageSet;
  return proto.communication.NewMessageSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.NewMessageSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.NewMessageSet}
 */
proto.communication.NewMessageSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.communication.NewMessageEntity;
      reader.readMessage(value,proto.communication.NewMessageEntity.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.NewMessageSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.NewMessageSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.NewMessageSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.NewMessageSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.communication.NewMessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NewMessageEntity messages = 2;
 * @return {!Array<!proto.communication.NewMessageEntity>}
 */
proto.communication.NewMessageSet.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.communication.NewMessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.communication.NewMessageEntity, 2));
};


/**
 * @param {!Array<!proto.communication.NewMessageEntity>} value
 * @return {!proto.communication.NewMessageSet} returns this
*/
proto.communication.NewMessageSet.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.communication.NewMessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.NewMessageEntity}
 */
proto.communication.NewMessageSet.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.communication.NewMessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.NewMessageSet} returns this
 */
proto.communication.NewMessageSet.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


goog.object.extend(exports, proto.communication);
