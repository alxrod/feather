/**
 * @fileoverview gRPC-Web generated client stub for communication
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.15.8
// source: communication/contract.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var communication_deadline_pb = require('../communication/deadline_pb.js')

var communication_user_pb = require('../communication/user_pb.js')

var communication_item_pb = require('../communication/item_pb.js')

var communication_generic_pb = require('../communication/generic_pb.js')

var communication_requests_pb = require('../communication/requests_pb.js')
const proto = {};
proto.communication = require('./contract_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.ContractClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.ContractPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractCreateRequest,
 *   !proto.communication.ContractResponse>}
 */
const methodDescriptor_Contract_Create = new grpc.web.MethodDescriptor(
  '/communication.Contract/Create',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractCreateRequest,
  proto.communication.ContractResponse,
  /**
   * @param {!proto.communication.ContractCreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/Create',
      request,
      metadata || {},
      methodDescriptor_Contract_Create,
      callback);
};


/**
 * @param {!proto.communication.ContractCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/Create',
      request,
      metadata || {},
      methodDescriptor_Contract_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractDeleteDraftRequest,
 *   !proto.communication.ContractEditResponse>}
 */
const methodDescriptor_Contract_DeleteDraft = new grpc.web.MethodDescriptor(
  '/communication.Contract/DeleteDraft',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractDeleteDraftRequest,
  proto.communication.ContractEditResponse,
  /**
   * @param {!proto.communication.ContractDeleteDraftRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractEditResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractDeleteDraftRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.deleteDraft =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/DeleteDraft',
      request,
      metadata || {},
      methodDescriptor_Contract_DeleteDraft,
      callback);
};


/**
 * @param {!proto.communication.ContractDeleteDraftRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractEditResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.deleteDraft =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/DeleteDraft',
      request,
      metadata || {},
      methodDescriptor_Contract_DeleteDraft);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractUpdateRequest,
 *   !proto.communication.ContractResponse>}
 */
const methodDescriptor_Contract_UpdateDraft = new grpc.web.MethodDescriptor(
  '/communication.Contract/UpdateDraft',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractUpdateRequest,
  proto.communication.ContractResponse,
  /**
   * @param {!proto.communication.ContractUpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.updateDraft =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/UpdateDraft',
      request,
      metadata || {},
      methodDescriptor_Contract_UpdateDraft,
      callback);
};


/**
 * @param {!proto.communication.ContractUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.updateDraft =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/UpdateDraft',
      request,
      metadata || {},
      methodDescriptor_Contract_UpdateDraft);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractFinishCreationRequest,
 *   !proto.communication.ContractResponse>}
 */
const methodDescriptor_Contract_FinishCreation = new grpc.web.MethodDescriptor(
  '/communication.Contract/FinishCreation',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractFinishCreationRequest,
  proto.communication.ContractResponse,
  /**
   * @param {!proto.communication.ContractFinishCreationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractFinishCreationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.finishCreation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/FinishCreation',
      request,
      metadata || {},
      methodDescriptor_Contract_FinishCreation,
      callback);
};


/**
 * @param {!proto.communication.ContractFinishCreationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.finishCreation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/FinishCreation',
      request,
      metadata || {},
      methodDescriptor_Contract_FinishCreation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.EmailChangeRequest,
 *   !proto.communication.EmailChangeResponse>}
 */
const methodDescriptor_Contract_ChangeInviteEmail = new grpc.web.MethodDescriptor(
  '/communication.Contract/ChangeInviteEmail',
  grpc.web.MethodType.UNARY,
  proto.communication.EmailChangeRequest,
  proto.communication.EmailChangeResponse,
  /**
   * @param {!proto.communication.EmailChangeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.EmailChangeResponse.deserializeBinary
);


/**
 * @param {!proto.communication.EmailChangeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.EmailChangeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.EmailChangeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.changeInviteEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/ChangeInviteEmail',
      request,
      metadata || {},
      methodDescriptor_Contract_ChangeInviteEmail,
      callback);
};


/**
 * @param {!proto.communication.EmailChangeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.EmailChangeResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.changeInviteEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/ChangeInviteEmail',
      request,
      metadata || {},
      methodDescriptor_Contract_ChangeInviteEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.EmailResendRequest,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Contract_ResendInviteEmail = new grpc.web.MethodDescriptor(
  '/communication.Contract/ResendInviteEmail',
  grpc.web.MethodType.UNARY,
  proto.communication.EmailResendRequest,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.EmailResendRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.EmailResendRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.resendInviteEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/ResendInviteEmail',
      request,
      metadata || {},
      methodDescriptor_Contract_ResendInviteEmail,
      callback);
};


/**
 * @param {!proto.communication.EmailResendRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.resendInviteEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/ResendInviteEmail',
      request,
      metadata || {},
      methodDescriptor_Contract_ResendInviteEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.InviteDataRequest,
 *   !proto.communication.ContractInviteNub>}
 */
const methodDescriptor_Contract_InviteQuery = new grpc.web.MethodDescriptor(
  '/communication.Contract/InviteQuery',
  grpc.web.MethodType.UNARY,
  proto.communication.InviteDataRequest,
  proto.communication.ContractInviteNub,
  /**
   * @param {!proto.communication.InviteDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractInviteNub.deserializeBinary
);


/**
 * @param {!proto.communication.InviteDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractInviteNub)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractInviteNub>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.inviteQuery =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/InviteQuery',
      request,
      metadata || {},
      methodDescriptor_Contract_InviteQuery,
      callback);
};


/**
 * @param {!proto.communication.InviteDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractInviteNub>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.inviteQuery =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/InviteQuery',
      request,
      metadata || {},
      methodDescriptor_Contract_InviteQuery);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ClaimContractRequest,
 *   !proto.communication.ContractResponse>}
 */
const methodDescriptor_Contract_Claim = new grpc.web.MethodDescriptor(
  '/communication.Contract/Claim',
  grpc.web.MethodType.UNARY,
  proto.communication.ClaimContractRequest,
  proto.communication.ContractResponse,
  /**
   * @param {!proto.communication.ClaimContractRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ClaimContractRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.claim =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/Claim',
      request,
      metadata || {},
      methodDescriptor_Contract_Claim,
      callback);
};


/**
 * @param {!proto.communication.ClaimContractRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.claim =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/Claim',
      request,
      metadata || {},
      methodDescriptor_Contract_Claim);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SignContractRequest,
 *   !proto.communication.ContractResponse>}
 */
const methodDescriptor_Contract_Sign = new grpc.web.MethodDescriptor(
  '/communication.Contract/Sign',
  grpc.web.MethodType.UNARY,
  proto.communication.SignContractRequest,
  proto.communication.ContractResponse,
  /**
   * @param {!proto.communication.SignContractRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SignContractRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.sign =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/Sign',
      request,
      metadata || {},
      methodDescriptor_Contract_Sign,
      callback);
};


/**
 * @param {!proto.communication.SignContractRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.sign =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/Sign',
      request,
      metadata || {},
      methodDescriptor_Contract_Sign);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SettleContractRequest,
 *   !proto.communication.ContractResponse>}
 */
const methodDescriptor_Contract_Settle = new grpc.web.MethodDescriptor(
  '/communication.Contract/Settle',
  grpc.web.MethodType.UNARY,
  proto.communication.SettleContractRequest,
  proto.communication.ContractResponse,
  /**
   * @param {!proto.communication.SettleContractRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SettleContractRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.settle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/Settle',
      request,
      metadata || {},
      methodDescriptor_Contract_Settle,
      callback);
};


/**
 * @param {!proto.communication.SettleContractRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.settle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/Settle',
      request,
      metadata || {},
      methodDescriptor_Contract_Settle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.QueryByIdRequest,
 *   !proto.communication.ContractResponse>}
 */
const methodDescriptor_Contract_QueryById = new grpc.web.MethodDescriptor(
  '/communication.Contract/QueryById',
  grpc.web.MethodType.UNARY,
  communication_requests_pb.QueryByIdRequest,
  proto.communication.ContractResponse,
  /**
   * @param {!proto.communication.QueryByIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.communication.QueryByIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.queryById =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/QueryById',
      request,
      metadata || {},
      methodDescriptor_Contract_QueryById,
      callback);
};


/**
 * @param {!proto.communication.QueryByIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.queryById =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/QueryById',
      request,
      metadata || {},
      methodDescriptor_Contract_QueryById);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.QueryByUserRequest,
 *   !proto.communication.ContractNubSet>}
 */
const methodDescriptor_Contract_QueryByUser = new grpc.web.MethodDescriptor(
  '/communication.Contract/QueryByUser',
  grpc.web.MethodType.UNARY,
  communication_requests_pb.QueryByUserRequest,
  proto.communication.ContractNubSet,
  /**
   * @param {!proto.communication.QueryByUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractNubSet.deserializeBinary
);


/**
 * @param {!proto.communication.QueryByUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractNubSet)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractNubSet>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.queryByUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/QueryByUser',
      request,
      metadata || {},
      methodDescriptor_Contract_QueryByUser,
      callback);
};


/**
 * @param {!proto.communication.QueryByUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractNubSet>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.queryByUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/QueryByUser',
      request,
      metadata || {},
      methodDescriptor_Contract_QueryByUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.QueryByUserRequest,
 *   !proto.communication.ContractNubSet>}
 */
const methodDescriptor_Contract_QueryByAdmin = new grpc.web.MethodDescriptor(
  '/communication.Contract/QueryByAdmin',
  grpc.web.MethodType.UNARY,
  communication_requests_pb.QueryByUserRequest,
  proto.communication.ContractNubSet,
  /**
   * @param {!proto.communication.QueryByUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractNubSet.deserializeBinary
);


/**
 * @param {!proto.communication.QueryByUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractNubSet)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractNubSet>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.queryByAdmin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/QueryByAdmin',
      request,
      metadata || {},
      methodDescriptor_Contract_QueryByAdmin,
      callback);
};


/**
 * @param {!proto.communication.QueryByUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractNubSet>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.queryByAdmin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/QueryByAdmin',
      request,
      metadata || {},
      methodDescriptor_Contract_QueryByAdmin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestPriceReq,
 *   !proto.communication.ContractEditResponse>}
 */
const methodDescriptor_Contract_SuggestPrice = new grpc.web.MethodDescriptor(
  '/communication.Contract/SuggestPrice',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestPriceReq,
  proto.communication.ContractEditResponse,
  /**
   * @param {!proto.communication.SuggestPriceReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractEditResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestPriceReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.suggestPrice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/SuggestPrice',
      request,
      metadata || {},
      methodDescriptor_Contract_SuggestPrice,
      callback);
};


/**
 * @param {!proto.communication.SuggestPriceReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractEditResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.suggestPrice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/SuggestPrice',
      request,
      metadata || {},
      methodDescriptor_Contract_SuggestPrice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ReactPriceReq,
 *   !proto.communication.ContractEditResponse>}
 */
const methodDescriptor_Contract_ReactPrice = new grpc.web.MethodDescriptor(
  '/communication.Contract/ReactPrice',
  grpc.web.MethodType.UNARY,
  proto.communication.ReactPriceReq,
  proto.communication.ContractEditResponse,
  /**
   * @param {!proto.communication.ReactPriceReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractEditResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ReactPriceReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.reactPrice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/ReactPrice',
      request,
      metadata || {},
      methodDescriptor_Contract_ReactPrice,
      callback);
};


/**
 * @param {!proto.communication.ReactPriceReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractEditResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.reactPrice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/ReactPrice',
      request,
      metadata || {},
      methodDescriptor_Contract_ReactPrice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractToggleLockRequest,
 *   !proto.communication.ContractEditResponse>}
 */
const methodDescriptor_Contract_ToggleLock = new grpc.web.MethodDescriptor(
  '/communication.Contract/ToggleLock',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractToggleLockRequest,
  proto.communication.ContractEditResponse,
  /**
   * @param {!proto.communication.ContractToggleLockRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractEditResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractToggleLockRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.toggleLock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/ToggleLock',
      request,
      metadata || {},
      methodDescriptor_Contract_ToggleLock,
      callback);
};


/**
 * @param {!proto.communication.ContractToggleLockRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractEditResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.toggleLock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/ToggleLock',
      request,
      metadata || {},
      methodDescriptor_Contract_ToggleLock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractReactLockRequest,
 *   !proto.communication.ContractEditResponse>}
 */
const methodDescriptor_Contract_ReactLock = new grpc.web.MethodDescriptor(
  '/communication.Contract/ReactLock',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractReactLockRequest,
  proto.communication.ContractEditResponse,
  /**
   * @param {!proto.communication.ContractReactLockRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractEditResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractReactLockRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.reactLock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/ReactLock',
      request,
      metadata || {},
      methodDescriptor_Contract_ReactLock,
      callback);
};


/**
 * @param {!proto.communication.ContractReactLockRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractEditResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.reactLock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/ReactLock',
      request,
      metadata || {},
      methodDescriptor_Contract_ReactLock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractAdminSupport,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Contract_RequestAdmin = new grpc.web.MethodDescriptor(
  '/communication.Contract/RequestAdmin',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractAdminSupport,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.ContractAdminSupport} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractAdminSupport} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.requestAdmin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/RequestAdmin',
      request,
      metadata || {},
      methodDescriptor_Contract_RequestAdmin,
      callback);
};


/**
 * @param {!proto.communication.ContractAdminSupport} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.requestAdmin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/RequestAdmin',
      request,
      metadata || {},
      methodDescriptor_Contract_RequestAdmin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.ContractAdminSupport,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Contract_ResolveAdmin = new grpc.web.MethodDescriptor(
  '/communication.Contract/ResolveAdmin',
  grpc.web.MethodType.UNARY,
  proto.communication.ContractAdminSupport,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.ContractAdminSupport} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.ContractAdminSupport} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.resolveAdmin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/ResolveAdmin',
      request,
      metadata || {},
      methodDescriptor_Contract_ResolveAdmin,
      callback);
};


/**
 * @param {!proto.communication.ContractAdminSupport} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.resolveAdmin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/ResolveAdmin',
      request,
      metadata || {},
      methodDescriptor_Contract_ResolveAdmin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.FigmaFileConnectRequest,
 *   !proto.communication.ContractEditResponse>}
 */
const methodDescriptor_Contract_SetFigmaConnected = new grpc.web.MethodDescriptor(
  '/communication.Contract/SetFigmaConnected',
  grpc.web.MethodType.UNARY,
  proto.communication.FigmaFileConnectRequest,
  proto.communication.ContractEditResponse,
  /**
   * @param {!proto.communication.FigmaFileConnectRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractEditResponse.deserializeBinary
);


/**
 * @param {!proto.communication.FigmaFileConnectRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.setFigmaConnected =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/SetFigmaConnected',
      request,
      metadata || {},
      methodDescriptor_Contract_SetFigmaConnected,
      callback);
};


/**
 * @param {!proto.communication.FigmaFileConnectRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractEditResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.setFigmaConnected =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/SetFigmaConnected',
      request,
      metadata || {},
      methodDescriptor_Contract_SetFigmaConnected);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.FigmaItemRequest,
 *   !proto.communication.ContractEditResponse>}
 */
const methodDescriptor_Contract_SetItemFigmaNodes = new grpc.web.MethodDescriptor(
  '/communication.Contract/SetItemFigmaNodes',
  grpc.web.MethodType.UNARY,
  proto.communication.FigmaItemRequest,
  proto.communication.ContractEditResponse,
  /**
   * @param {!proto.communication.FigmaItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ContractEditResponse.deserializeBinary
);


/**
 * @param {!proto.communication.FigmaItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ContractEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ContractEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ContractClient.prototype.setItemFigmaNodes =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Contract/SetItemFigmaNodes',
      request,
      metadata || {},
      methodDescriptor_Contract_SetItemFigmaNodes,
      callback);
};


/**
 * @param {!proto.communication.FigmaItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ContractEditResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ContractPromiseClient.prototype.setItemFigmaNodes =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Contract/SetItemFigmaNodes',
      request,
      metadata || {},
      methodDescriptor_Contract_SetItemFigmaNodes);
};


module.exports = proto.communication;

