/**
 * @fileoverview gRPC-Web generated client stub for communication
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: communication/deadline.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var communication_item_pb = require('../communication/item_pb.js')

var communication_generic_pb = require('../communication/generic_pb.js')
const proto = {};
proto.communication = require('./deadline_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.DeadlineClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.DeadlinePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestDateReq,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Deadline_ChangeDate = new grpc.web.MethodDescriptor(
  '/communication.Deadline/ChangeDate',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestDateReq,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.SuggestDateReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestDateReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.DeadlineClient.prototype.changeDate =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Deadline/ChangeDate',
      request,
      metadata || {},
      methodDescriptor_Deadline_ChangeDate,
      callback);
};


/**
 * @param {!proto.communication.SuggestDateReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.DeadlinePromiseClient.prototype.changeDate =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Deadline/ChangeDate',
      request,
      metadata || {},
      methodDescriptor_Deadline_ChangeDate);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestDeadlineItemsReq,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Deadline_ChangeDeadlineItems = new grpc.web.MethodDescriptor(
  '/communication.Deadline/ChangeDeadlineItems',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestDeadlineItemsReq,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.SuggestDeadlineItemsReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestDeadlineItemsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.DeadlineClient.prototype.changeDeadlineItems =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Deadline/ChangeDeadlineItems',
      request,
      metadata || {},
      methodDescriptor_Deadline_ChangeDeadlineItems,
      callback);
};


/**
 * @param {!proto.communication.SuggestDeadlineItemsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.DeadlinePromiseClient.prototype.changeDeadlineItems =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Deadline/ChangeDeadlineItems',
      request,
      metadata || {},
      methodDescriptor_Deadline_ChangeDeadlineItems);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestAddDeadlineReq,
 *   !proto.communication.DeadlineEntity>}
 */
const methodDescriptor_Deadline_AddDeadline = new grpc.web.MethodDescriptor(
  '/communication.Deadline/AddDeadline',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestAddDeadlineReq,
  proto.communication.DeadlineEntity,
  /**
   * @param {!proto.communication.SuggestAddDeadlineReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.DeadlineEntity.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestAddDeadlineReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.DeadlineEntity)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.DeadlineEntity>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.DeadlineClient.prototype.addDeadline =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Deadline/AddDeadline',
      request,
      metadata || {},
      methodDescriptor_Deadline_AddDeadline,
      callback);
};


/**
 * @param {!proto.communication.SuggestAddDeadlineReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.DeadlineEntity>}
 *     Promise that resolves to the response
 */
proto.communication.DeadlinePromiseClient.prototype.addDeadline =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Deadline/AddDeadline',
      request,
      metadata || {},
      methodDescriptor_Deadline_AddDeadline);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestDelDeadlineReq,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Deadline_DeleteDeadline = new grpc.web.MethodDescriptor(
  '/communication.Deadline/DeleteDeadline',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestDelDeadlineReq,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.SuggestDelDeadlineReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestDelDeadlineReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.DeadlineClient.prototype.deleteDeadline =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Deadline/DeleteDeadline',
      request,
      metadata || {},
      methodDescriptor_Deadline_DeleteDeadline,
      callback);
};


/**
 * @param {!proto.communication.SuggestDelDeadlineReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.DeadlinePromiseClient.prototype.deleteDeadline =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Deadline/DeleteDeadline',
      request,
      metadata || {},
      methodDescriptor_Deadline_DeleteDeadline);
};


module.exports = proto.communication;

