/**
 * @fileoverview gRPC-Web generated client stub for communication
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: communication/item.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var communication_generic_pb = require('../communication/generic_pb.js')
const proto = {};
proto.communication = require('./item_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.ItemClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.ItemPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestItemReq,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Item_ChangeBody = new grpc.web.MethodDescriptor(
  '/communication.Item/ChangeBody',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestItemReq,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.SuggestItemReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestItemReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ItemClient.prototype.changeBody =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Item/ChangeBody',
      request,
      metadata || {},
      methodDescriptor_Item_ChangeBody,
      callback);
};


/**
 * @param {!proto.communication.SuggestItemReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ItemPromiseClient.prototype.changeBody =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Item/ChangeBody',
      request,
      metadata || {},
      methodDescriptor_Item_ChangeBody);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestAddItemReq,
 *   !proto.communication.ItemEntity>}
 */
const methodDescriptor_Item_AddItem = new grpc.web.MethodDescriptor(
  '/communication.Item/AddItem',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestAddItemReq,
  proto.communication.ItemEntity,
  /**
   * @param {!proto.communication.SuggestAddItemReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.ItemEntity.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestAddItemReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.ItemEntity)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.ItemEntity>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ItemClient.prototype.addItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Item/AddItem',
      request,
      metadata || {},
      methodDescriptor_Item_AddItem,
      callback);
};


/**
 * @param {!proto.communication.SuggestAddItemReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.ItemEntity>}
 *     Promise that resolves to the response
 */
proto.communication.ItemPromiseClient.prototype.addItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Item/AddItem',
      request,
      metadata || {},
      methodDescriptor_Item_AddItem);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.SuggestDelItemReq,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Item_DeleteItem = new grpc.web.MethodDescriptor(
  '/communication.Item/DeleteItem',
  grpc.web.MethodType.UNARY,
  proto.communication.SuggestDelItemReq,
  communication_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.SuggestDelItemReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communication_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.SuggestDelItemReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.ItemClient.prototype.deleteItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Item/DeleteItem',
      request,
      metadata || {},
      methodDescriptor_Item_DeleteItem,
      callback);
};


/**
 * @param {!proto.communication.SuggestDelItemReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.ItemPromiseClient.prototype.deleteItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Item/DeleteItem',
      request,
      metadata || {},
      methodDescriptor_Item_DeleteItem);
};


module.exports = proto.communication;

