// source: communication/document.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var communication_deadline_pb = require('../communication/deadline_pb.js');
goog.object.extend(proto, communication_deadline_pb);
var communication_user_pb = require('../communication/user_pb.js');
goog.object.extend(proto, communication_user_pb);
var communication_item_pb = require('../communication/item_pb.js');
goog.object.extend(proto, communication_item_pb);
var communication_generic_pb = require('../communication/generic_pb.js');
goog.object.extend(proto, communication_generic_pb);
goog.exportSymbol('proto.communication.DocumentCreateRequest', null, global);
goog.exportSymbol('proto.communication.DocumentEntity', null, global);
goog.exportSymbol('proto.communication.DocumentNub', null, global);
goog.exportSymbol('proto.communication.DocumentNubSet', null, global);
goog.exportSymbol('proto.communication.FigmaFileConnectRequest', null, global);
goog.exportSymbol('proto.communication.FigmaItemRequest', null, global);
goog.exportSymbol('proto.communication.QueryByIdRequest', null, global);
goog.exportSymbol('proto.communication.QueryByUserRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DocumentEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.DocumentEntity.repeatedFields_, null);
};
goog.inherits(proto.communication.DocumentEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DocumentEntity.displayName = 'proto.communication.DocumentEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DocumentNub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.DocumentNub.repeatedFields_, null);
};
goog.inherits(proto.communication.DocumentNub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DocumentNub.displayName = 'proto.communication.DocumentNub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DocumentNubSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.DocumentNubSet.repeatedFields_, null);
};
goog.inherits(proto.communication.DocumentNubSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DocumentNubSet.displayName = 'proto.communication.DocumentNubSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.DocumentCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.DocumentCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.communication.DocumentCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.DocumentCreateRequest.displayName = 'proto.communication.DocumentCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.FigmaFileConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.FigmaFileConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.FigmaFileConnectRequest.displayName = 'proto.communication.FigmaFileConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.FigmaItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.FigmaItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.FigmaItemRequest.displayName = 'proto.communication.FigmaItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.QueryByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.QueryByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.QueryByIdRequest.displayName = 'proto.communication.QueryByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.QueryByUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.QueryByUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.QueryByUserRequest.displayName = 'proto.communication.QueryByUserRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.DocumentEntity.repeatedFields_ = [3,4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DocumentEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DocumentEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DocumentEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    linkShare: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    communication_user_pb.UserNubEntity.toObject, includeInstance),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineEntity.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 6, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    communication_item_pb.ItemEntity.toObject, includeInstance),
    roomId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    figmaLink: jspb.Message.getFieldWithDefault(msg, 9, ""),
    figmaFileKey: jspb.Message.getFieldWithDefault(msg, 10, ""),
    figmaConnected: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DocumentEntity}
 */
proto.communication.DocumentEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DocumentEntity;
  return proto.communication.DocumentEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DocumentEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DocumentEntity}
 */
proto.communication.DocumentEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLinkShare(value);
      break;
    case 3:
      var value = new communication_user_pb.UserNubEntity;
      reader.readMessage(value,communication_user_pb.UserNubEntity.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 4:
      var value = new communication_deadline_pb.DeadlineEntity;
      reader.readMessage(value,communication_deadline_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 7:
      var value = new communication_item_pb.ItemEntity;
      reader.readMessage(value,communication_item_pb.ItemEntity.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaLink(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaFileKey(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFigmaConnected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DocumentEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DocumentEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DocumentEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLinkShare();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      communication_user_pb.UserNubEntity.serializeBinaryToWriter
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      communication_deadline_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      communication_item_pb.ItemEntity.serializeBinaryToWriter
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFigmaLink();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFigmaFileKey();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFigmaConnected();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.DocumentEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool link_share = 2;
 * @return {boolean}
 */
proto.communication.DocumentEntity.prototype.getLinkShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setLinkShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated UserNubEntity users = 3;
 * @return {!Array<!proto.communication.UserNubEntity>}
 */
proto.communication.DocumentEntity.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.communication.UserNubEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_user_pb.UserNubEntity, 3));
};


/**
 * @param {!Array<!proto.communication.UserNubEntity>} value
 * @return {!proto.communication.DocumentEntity} returns this
*/
proto.communication.DocumentEntity.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.communication.UserNubEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.UserNubEntity}
 */
proto.communication.DocumentEntity.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.communication.UserNubEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * repeated DeadlineEntity deadlines = 4;
 * @return {!Array<!proto.communication.DeadlineEntity>}
 */
proto.communication.DocumentEntity.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineEntity, 4));
};


/**
 * @param {!Array<!proto.communication.DeadlineEntity>} value
 * @return {!proto.communication.DocumentEntity} returns this
*/
proto.communication.DocumentEntity.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.communication.DeadlineEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineEntity}
 */
proto.communication.DocumentEntity.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.communication.DeadlineEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.communication.DocumentEntity.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string summary = 6;
 * @return {string}
 */
proto.communication.DocumentEntity.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated ItemEntity items = 7;
 * @return {!Array<!proto.communication.ItemEntity>}
 */
proto.communication.DocumentEntity.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.communication.ItemEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_item_pb.ItemEntity, 7));
};


/**
 * @param {!Array<!proto.communication.ItemEntity>} value
 * @return {!proto.communication.DocumentEntity} returns this
*/
proto.communication.DocumentEntity.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.communication.ItemEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ItemEntity}
 */
proto.communication.DocumentEntity.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.communication.ItemEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional string room_id = 8;
 * @return {string}
 */
proto.communication.DocumentEntity.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string figma_link = 9;
 * @return {string}
 */
proto.communication.DocumentEntity.prototype.getFigmaLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setFigmaLink = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string figma_file_key = 10;
 * @return {string}
 */
proto.communication.DocumentEntity.prototype.getFigmaFileKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setFigmaFileKey = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool figma_connected = 11;
 * @return {boolean}
 */
proto.communication.DocumentEntity.prototype.getFigmaConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.DocumentEntity} returns this
 */
proto.communication.DocumentEntity.prototype.setFigmaConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.DocumentNub.repeatedFields_ = [4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DocumentNub.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DocumentNub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DocumentNub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentNub.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    figmaFileKey: jspb.Message.getFieldWithDefault(msg, 5, ""),
    figmaConnected: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineNub.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DocumentNub}
 */
proto.communication.DocumentNub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DocumentNub;
  return proto.communication.DocumentNub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DocumentNub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DocumentNub}
 */
proto.communication.DocumentNub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserIds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaFileKey(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFigmaConnected(value);
      break;
    case 7:
      var value = new communication_deadline_pb.DeadlineNub;
      reader.readMessage(value,communication_deadline_pb.DeadlineNub.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DocumentNub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DocumentNub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DocumentNub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentNub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFigmaFileKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFigmaConnected();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      communication_deadline_pb.DeadlineNub.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.DocumentNub.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.communication.DocumentNub.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string summary = 3;
 * @return {string}
 */
proto.communication.DocumentNub.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string user_ids = 4;
 * @return {!Array<string>}
 */
proto.communication.DocumentNub.prototype.getUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.setUserIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.addUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.clearUserIdsList = function() {
  return this.setUserIdsList([]);
};


/**
 * optional string figma_file_key = 5;
 * @return {string}
 */
proto.communication.DocumentNub.prototype.getFigmaFileKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.setFigmaFileKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool figma_connected = 6;
 * @return {boolean}
 */
proto.communication.DocumentNub.prototype.getFigmaConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.setFigmaConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * repeated DeadlineNub deadlines = 7;
 * @return {!Array<!proto.communication.DeadlineNub>}
 */
proto.communication.DocumentNub.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineNub>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineNub, 7));
};


/**
 * @param {!Array<!proto.communication.DeadlineNub>} value
 * @return {!proto.communication.DocumentNub} returns this
*/
proto.communication.DocumentNub.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.communication.DeadlineNub=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineNub}
 */
proto.communication.DocumentNub.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.communication.DeadlineNub, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentNub} returns this
 */
proto.communication.DocumentNub.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.DocumentNubSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DocumentNubSet.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DocumentNubSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DocumentNubSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentNubSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    documentNubsList: jspb.Message.toObjectList(msg.getDocumentNubsList(),
    proto.communication.DocumentNub.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DocumentNubSet}
 */
proto.communication.DocumentNubSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DocumentNubSet;
  return proto.communication.DocumentNubSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DocumentNubSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DocumentNubSet}
 */
proto.communication.DocumentNubSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.communication.DocumentNub;
      reader.readMessage(value,proto.communication.DocumentNub.deserializeBinaryFromReader);
      msg.addDocumentNubs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DocumentNubSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DocumentNubSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DocumentNubSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentNubSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocumentNubsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.communication.DocumentNub.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DocumentNub document_nubs = 1;
 * @return {!Array<!proto.communication.DocumentNub>}
 */
proto.communication.DocumentNubSet.prototype.getDocumentNubsList = function() {
  return /** @type{!Array<!proto.communication.DocumentNub>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.communication.DocumentNub, 1));
};


/**
 * @param {!Array<!proto.communication.DocumentNub>} value
 * @return {!proto.communication.DocumentNubSet} returns this
*/
proto.communication.DocumentNubSet.prototype.setDocumentNubsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.communication.DocumentNub=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DocumentNub}
 */
proto.communication.DocumentNubSet.prototype.addDocumentNubs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.communication.DocumentNub, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentNubSet} returns this
 */
proto.communication.DocumentNubSet.prototype.clearDocumentNubsList = function() {
  return this.setDocumentNubsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.DocumentCreateRequest.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.DocumentCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.DocumentCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.DocumentCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineEntity.toObject, includeInstance),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    communication_item_pb.ItemEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.DocumentCreateRequest}
 */
proto.communication.DocumentCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.DocumentCreateRequest;
  return proto.communication.DocumentCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.DocumentCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.DocumentCreateRequest}
 */
proto.communication.DocumentCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 6:
      var value = new communication_deadline_pb.DeadlineEntity;
      reader.readMessage(value,communication_deadline_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    case 7:
      var value = new communication_item_pb.ItemEntity;
      reader.readMessage(value,communication_item_pb.ItemEntity.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.DocumentCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.DocumentCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.DocumentCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.DocumentCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      communication_deadline_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      communication_item_pb.ItemEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.DocumentCreateRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentCreateRequest} returns this
 */
proto.communication.DocumentCreateRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.communication.DocumentCreateRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentCreateRequest} returns this
 */
proto.communication.DocumentCreateRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string summary = 3;
 * @return {string}
 */
proto.communication.DocumentCreateRequest.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.DocumentCreateRequest} returns this
 */
proto.communication.DocumentCreateRequest.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated DeadlineEntity deadlines = 6;
 * @return {!Array<!proto.communication.DeadlineEntity>}
 */
proto.communication.DocumentCreateRequest.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineEntity, 6));
};


/**
 * @param {!Array<!proto.communication.DeadlineEntity>} value
 * @return {!proto.communication.DocumentCreateRequest} returns this
*/
proto.communication.DocumentCreateRequest.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.communication.DeadlineEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineEntity}
 */
proto.communication.DocumentCreateRequest.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.communication.DeadlineEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentCreateRequest} returns this
 */
proto.communication.DocumentCreateRequest.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};


/**
 * repeated ItemEntity items = 7;
 * @return {!Array<!proto.communication.ItemEntity>}
 */
proto.communication.DocumentCreateRequest.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.communication.ItemEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_item_pb.ItemEntity, 7));
};


/**
 * @param {!Array<!proto.communication.ItemEntity>} value
 * @return {!proto.communication.DocumentCreateRequest} returns this
*/
proto.communication.DocumentCreateRequest.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.communication.ItemEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ItemEntity}
 */
proto.communication.DocumentCreateRequest.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.communication.ItemEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.DocumentCreateRequest} returns this
 */
proto.communication.DocumentCreateRequest.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.FigmaFileConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.FigmaFileConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.FigmaFileConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaFileConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    docId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    figmaLink: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.FigmaFileConnectRequest}
 */
proto.communication.FigmaFileConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.FigmaFileConnectRequest;
  return proto.communication.FigmaFileConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.FigmaFileConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.FigmaFileConnectRequest}
 */
proto.communication.FigmaFileConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.FigmaFileConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.FigmaFileConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.FigmaFileConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaFileConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFigmaLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.FigmaFileConnectRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaFileConnectRequest} returns this
 */
proto.communication.FigmaFileConnectRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string doc_id = 2;
 * @return {string}
 */
proto.communication.FigmaFileConnectRequest.prototype.getDocId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaFileConnectRequest} returns this
 */
proto.communication.FigmaFileConnectRequest.prototype.setDocId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string figma_link = 3;
 * @return {string}
 */
proto.communication.FigmaFileConnectRequest.prototype.getFigmaLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaFileConnectRequest} returns this
 */
proto.communication.FigmaFileConnectRequest.prototype.setFigmaLink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.FigmaItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.FigmaItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.FigmaItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    docId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    itemId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    componentId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.FigmaItemRequest}
 */
proto.communication.FigmaItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.FigmaItemRequest;
  return proto.communication.FigmaItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.FigmaItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.FigmaItemRequest}
 */
proto.communication.FigmaItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.FigmaItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.FigmaItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.FigmaItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComponentId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string doc_id = 1;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getDocId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setDocId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 5;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string item_id = 3;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string component_id = 4;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getComponentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setComponentId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.QueryByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.QueryByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.QueryByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.QueryByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.QueryByIdRequest}
 */
proto.communication.QueryByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.QueryByIdRequest;
  return proto.communication.QueryByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.QueryByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.QueryByIdRequest}
 */
proto.communication.QueryByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.QueryByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.QueryByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.QueryByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.QueryByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.QueryByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.QueryByIdRequest} returns this
 */
proto.communication.QueryByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.communication.QueryByIdRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.QueryByIdRequest} returns this
 */
proto.communication.QueryByIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.QueryByUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.QueryByUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.QueryByUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.QueryByUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unsorted: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.QueryByUserRequest}
 */
proto.communication.QueryByUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.QueryByUserRequest;
  return proto.communication.QueryByUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.QueryByUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.QueryByUserRequest}
 */
proto.communication.QueryByUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnsorted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.QueryByUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.QueryByUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.QueryByUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.QueryByUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnsorted();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.QueryByUserRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.QueryByUserRequest} returns this
 */
proto.communication.QueryByUserRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool unsorted = 2;
 * @return {boolean}
 */
proto.communication.QueryByUserRequest.prototype.getUnsorted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.QueryByUserRequest} returns this
 */
proto.communication.QueryByUserRequest.prototype.setUnsorted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.communication);
