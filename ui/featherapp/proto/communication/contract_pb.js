// source: communication/contract.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var communication_deadline_pb = require('../communication/deadline_pb.js');
goog.object.extend(proto, communication_deadline_pb);
var communication_user_pb = require('../communication/user_pb.js');
goog.object.extend(proto, communication_user_pb);
var communication_item_pb = require('../communication/item_pb.js');
goog.object.extend(proto, communication_item_pb);
var communication_generic_pb = require('../communication/generic_pb.js');
goog.object.extend(proto, communication_generic_pb);
var communication_requests_pb = require('../communication/requests_pb.js');
goog.object.extend(proto, communication_requests_pb);
goog.exportSymbol('proto.communication.ClaimContractRequest', null, global);
goog.exportSymbol('proto.communication.ContractAdminSupport', null, global);
goog.exportSymbol('proto.communication.ContractCreateRequest', null, global);
goog.exportSymbol('proto.communication.ContractDeleteDraftRequest', null, global);
goog.exportSymbol('proto.communication.ContractEditResponse', null, global);
goog.exportSymbol('proto.communication.ContractEntity', null, global);
goog.exportSymbol('proto.communication.ContractFinishCreationRequest', null, global);
goog.exportSymbol('proto.communication.ContractInviteNub', null, global);
goog.exportSymbol('proto.communication.ContractNub', null, global);
goog.exportSymbol('proto.communication.ContractNubSet', null, global);
goog.exportSymbol('proto.communication.ContractReactLockRequest', null, global);
goog.exportSymbol('proto.communication.ContractResponse', null, global);
goog.exportSymbol('proto.communication.ContractToggleLockRequest', null, global);
goog.exportSymbol('proto.communication.ContractUpdateRequest', null, global);
goog.exportSymbol('proto.communication.EmailChangeRequest', null, global);
goog.exportSymbol('proto.communication.EmailChangeResponse', null, global);
goog.exportSymbol('proto.communication.EmailResendRequest', null, global);
goog.exportSymbol('proto.communication.FigmaFileConnectRequest', null, global);
goog.exportSymbol('proto.communication.FigmaItemRequest', null, global);
goog.exportSymbol('proto.communication.FigmaLinkRequest', null, global);
goog.exportSymbol('proto.communication.InviteDataRequest', null, global);
goog.exportSymbol('proto.communication.PriceEntity', null, global);
goog.exportSymbol('proto.communication.ReactPriceReq', null, global);
goog.exportSymbol('proto.communication.SettleContractRequest', null, global);
goog.exportSymbol('proto.communication.SignContractRequest', null, global);
goog.exportSymbol('proto.communication.SuggestPriceReq', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.PriceEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.PriceEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.PriceEntity.displayName = 'proto.communication.PriceEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ContractEntity.repeatedFields_, null);
};
goog.inherits(proto.communication.ContractEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractEntity.displayName = 'proto.communication.ContractEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractNub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ContractNub.repeatedFields_, null);
};
goog.inherits(proto.communication.ContractNub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractNub.displayName = 'proto.communication.ContractNub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.InviteDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.InviteDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.InviteDataRequest.displayName = 'proto.communication.InviteDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractInviteNub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ContractInviteNub.repeatedFields_, null);
};
goog.inherits(proto.communication.ContractInviteNub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractInviteNub.displayName = 'proto.communication.ContractInviteNub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractNubSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ContractNubSet.repeatedFields_, null);
};
goog.inherits(proto.communication.ContractNubSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractNubSet.displayName = 'proto.communication.ContractNubSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ContractCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.communication.ContractCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractCreateRequest.displayName = 'proto.communication.ContractCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractFinishCreationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractFinishCreationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractFinishCreationRequest.displayName = 'proto.communication.ContractFinishCreationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.communication.ContractUpdateRequest.repeatedFields_, null);
};
goog.inherits(proto.communication.ContractUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractUpdateRequest.displayName = 'proto.communication.ContractUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractResponse.displayName = 'proto.communication.ContractResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ClaimContractRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ClaimContractRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ClaimContractRequest.displayName = 'proto.communication.ClaimContractRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.SignContractRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.SignContractRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.SignContractRequest.displayName = 'proto.communication.SignContractRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.SettleContractRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.SettleContractRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.SettleContractRequest.displayName = 'proto.communication.SettleContractRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractAdminSupport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractAdminSupport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractAdminSupport.displayName = 'proto.communication.ContractAdminSupport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractToggleLockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractToggleLockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractToggleLockRequest.displayName = 'proto.communication.ContractToggleLockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractReactLockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractReactLockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractReactLockRequest.displayName = 'proto.communication.ContractReactLockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractDeleteDraftRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractDeleteDraftRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractDeleteDraftRequest.displayName = 'proto.communication.ContractDeleteDraftRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ContractEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ContractEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ContractEditResponse.displayName = 'proto.communication.ContractEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.EmailChangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.EmailChangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.EmailChangeRequest.displayName = 'proto.communication.EmailChangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.EmailChangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.EmailChangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.EmailChangeResponse.displayName = 'proto.communication.EmailChangeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.EmailResendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.EmailResendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.EmailResendRequest.displayName = 'proto.communication.EmailResendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.FigmaLinkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.FigmaLinkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.FigmaLinkRequest.displayName = 'proto.communication.FigmaLinkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.FigmaItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.FigmaItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.FigmaItemRequest.displayName = 'proto.communication.FigmaItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.FigmaFileConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.FigmaFileConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.FigmaFileConnectRequest.displayName = 'proto.communication.FigmaFileConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.SuggestPriceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.SuggestPriceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.SuggestPriceReq.displayName = 'proto.communication.SuggestPriceReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.communication.ReactPriceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.communication.ReactPriceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.communication.ReactPriceReq.displayName = 'proto.communication.ReactPriceReq';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.PriceEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.PriceEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.PriceEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.PriceEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    current: jspb.Message.getFieldWithDefault(msg, 1, 0),
    buyer: jspb.Message.getFieldWithDefault(msg, 2, 0),
    worker: jspb.Message.getFieldWithDefault(msg, 3, 0),
    awaitingApproval: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    proposerId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.PriceEntity}
 */
proto.communication.PriceEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.PriceEntity;
  return proto.communication.PriceEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.PriceEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.PriceEntity}
 */
proto.communication.PriceEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuyer(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWorker(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAwaitingApproval(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.PriceEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.PriceEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.PriceEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.PriceEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBuyer();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getWorker();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAwaitingApproval();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getProposerId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 current = 1;
 * @return {number}
 */
proto.communication.PriceEntity.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceEntity} returns this
 */
proto.communication.PriceEntity.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 buyer = 2;
 * @return {number}
 */
proto.communication.PriceEntity.prototype.getBuyer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceEntity} returns this
 */
proto.communication.PriceEntity.prototype.setBuyer = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 worker = 3;
 * @return {number}
 */
proto.communication.PriceEntity.prototype.getWorker = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.PriceEntity} returns this
 */
proto.communication.PriceEntity.prototype.setWorker = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool awaiting_approval = 4;
 * @return {boolean}
 */
proto.communication.PriceEntity.prototype.getAwaitingApproval = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.PriceEntity} returns this
 */
proto.communication.PriceEntity.prototype.setAwaitingApproval = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string proposer_id = 5;
 * @return {string}
 */
proto.communication.PriceEntity.prototype.getProposerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.PriceEntity} returns this
 */
proto.communication.PriceEntity.prototype.setProposerId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ContractEntity.repeatedFields_ = [5,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invitedEmail: jspb.Message.getFieldWithDefault(msg, 11, ""),
    invitePassword: jspb.Message.getFieldWithDefault(msg, 18, ""),
    linkShare: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    worker: (f = msg.getWorker()) && communication_user_pb.UserNubEntity.toObject(includeInstance, f),
    buyer: (f = msg.getBuyer()) && communication_user_pb.UserNubEntity.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && proto.communication.PriceEntity.toObject(includeInstance, f),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineEntity.toObject, includeInstance),
    currentDeadlineId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    title: jspb.Message.getFieldWithDefault(msg, 8, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 6, ""),
    stage: jspb.Message.getFieldWithDefault(msg, 9, 0),
    universalLock: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    workerApproved: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    buyerApproved: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    communication_item_pb.ItemEntity.toObject, includeInstance),
    roomId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    disputed: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    adminRequested: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    figmaLink: jspb.Message.getFieldWithDefault(msg, 19, ""),
    figmaFileKey: jspb.Message.getFieldWithDefault(msg, 21, ""),
    figmaConnected: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    freeStatus: jspb.Message.getBooleanFieldWithDefault(msg, 23, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractEntity}
 */
proto.communication.ContractEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractEntity;
  return proto.communication.ContractEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractEntity}
 */
proto.communication.ContractEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitedEmail(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitePassword(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLinkShare(value);
      break;
    case 2:
      var value = new communication_user_pb.UserNubEntity;
      reader.readMessage(value,communication_user_pb.UserNubEntity.deserializeBinaryFromReader);
      msg.setWorker(value);
      break;
    case 3:
      var value = new communication_user_pb.UserNubEntity;
      reader.readMessage(value,communication_user_pb.UserNubEntity.deserializeBinaryFromReader);
      msg.setBuyer(value);
      break;
    case 4:
      var value = new proto.communication.PriceEntity;
      reader.readMessage(value,proto.communication.PriceEntity.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = new communication_deadline_pb.DeadlineEntity;
      reader.readMessage(value,communication_deadline_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentDeadlineId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStage(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUniversalLock(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWorkerApproved(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyerApproved(value);
      break;
    case 7:
      var value = new communication_item_pb.ItemEntity;
      reader.readMessage(value,communication_item_pb.ItemEntity.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisputed(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdminRequested(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaLink(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaFileKey(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFigmaConnected(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFreeStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInvitedEmail();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getInvitePassword();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLinkShare();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getWorker();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      communication_user_pb.UserNubEntity.serializeBinaryToWriter
    );
  }
  f = message.getBuyer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      communication_user_pb.UserNubEntity.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.communication.PriceEntity.serializeBinaryToWriter
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      communication_deadline_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getCurrentDeadlineId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStage();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getUniversalLock();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getWorkerApproved();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getBuyerApproved();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      communication_item_pb.ItemEntity.serializeBinaryToWriter
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDisputed();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getAdminRequested();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getFigmaLink();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getFigmaFileKey();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getFigmaConnected();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getFreeStatus();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string invited_email = 11;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getInvitedEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setInvitedEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string invite_password = 18;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getInvitePassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setInvitePassword = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bool link_share = 22;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getLinkShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setLinkShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional UserNubEntity worker = 2;
 * @return {?proto.communication.UserNubEntity}
 */
proto.communication.ContractEntity.prototype.getWorker = function() {
  return /** @type{?proto.communication.UserNubEntity} */ (
    jspb.Message.getWrapperField(this, communication_user_pb.UserNubEntity, 2));
};


/**
 * @param {?proto.communication.UserNubEntity|undefined} value
 * @return {!proto.communication.ContractEntity} returns this
*/
proto.communication.ContractEntity.prototype.setWorker = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.clearWorker = function() {
  return this.setWorker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.hasWorker = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UserNubEntity buyer = 3;
 * @return {?proto.communication.UserNubEntity}
 */
proto.communication.ContractEntity.prototype.getBuyer = function() {
  return /** @type{?proto.communication.UserNubEntity} */ (
    jspb.Message.getWrapperField(this, communication_user_pb.UserNubEntity, 3));
};


/**
 * @param {?proto.communication.UserNubEntity|undefined} value
 * @return {!proto.communication.ContractEntity} returns this
*/
proto.communication.ContractEntity.prototype.setBuyer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.clearBuyer = function() {
  return this.setBuyer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.hasBuyer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PriceEntity price = 4;
 * @return {?proto.communication.PriceEntity}
 */
proto.communication.ContractEntity.prototype.getPrice = function() {
  return /** @type{?proto.communication.PriceEntity} */ (
    jspb.Message.getWrapperField(this, proto.communication.PriceEntity, 4));
};


/**
 * @param {?proto.communication.PriceEntity|undefined} value
 * @return {!proto.communication.ContractEntity} returns this
*/
proto.communication.ContractEntity.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated DeadlineEntity deadlines = 5;
 * @return {!Array<!proto.communication.DeadlineEntity>}
 */
proto.communication.ContractEntity.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineEntity, 5));
};


/**
 * @param {!Array<!proto.communication.DeadlineEntity>} value
 * @return {!proto.communication.ContractEntity} returns this
*/
proto.communication.ContractEntity.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.communication.DeadlineEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineEntity}
 */
proto.communication.ContractEntity.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.communication.DeadlineEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};


/**
 * optional string current_deadline_id = 15;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getCurrentDeadlineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setCurrentDeadlineId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string summary = 6;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 stage = 9;
 * @return {number}
 */
proto.communication.ContractEntity.prototype.getStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setStage = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool universal_lock = 14;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getUniversalLock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setUniversalLock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool worker_approved = 12;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getWorkerApproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setWorkerApproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool buyer_approved = 13;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getBuyerApproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setBuyerApproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * repeated ItemEntity items = 7;
 * @return {!Array<!proto.communication.ItemEntity>}
 */
proto.communication.ContractEntity.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.communication.ItemEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_item_pb.ItemEntity, 7));
};


/**
 * @param {!Array<!proto.communication.ItemEntity>} value
 * @return {!proto.communication.ContractEntity} returns this
*/
proto.communication.ContractEntity.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.communication.ItemEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ItemEntity}
 */
proto.communication.ContractEntity.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.communication.ItemEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional string room_id = 10;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool disputed = 16;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getDisputed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setDisputed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool admin_requested = 17;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getAdminRequested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setAdminRequested = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional string figma_link = 19;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getFigmaLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setFigmaLink = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string figma_file_key = 21;
 * @return {string}
 */
proto.communication.ContractEntity.prototype.getFigmaFileKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setFigmaFileKey = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional bool figma_connected = 20;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getFigmaConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setFigmaConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool free_status = 23;
 * @return {boolean}
 */
proto.communication.ContractEntity.prototype.getFreeStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractEntity} returns this
 */
proto.communication.ContractEntity.prototype.setFreeStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ContractNub.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractNub.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractNub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractNub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractNub.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 12, ""),
    deadline: (f = msg.getDeadline()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    price: jspb.Message.getFieldWithDefault(msg, 4, 0),
    stage: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    disputed: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    adminRequested: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    workerId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    buyerId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    figmaLink: jspb.Message.getFieldWithDefault(msg, 13, ""),
    figmaConnected: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineNub.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractNub}
 */
proto.communication.ContractNub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractNub;
  return proto.communication.ContractNub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractNub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractNub}
 */
proto.communication.ContractNub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeadline(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUserType(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisputed(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdminRequested(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkerId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaLink(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFigmaConnected(value);
      break;
    case 11:
      var value = new communication_deadline_pb.DeadlineNub;
      reader.readMessage(value,communication_deadline_pb.DeadlineNub.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractNub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractNub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractNub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractNub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getDeadline();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStage();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getUserType();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getDisputed();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getAdminRequested();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getWorkerId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBuyerId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFigmaLink();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getFigmaConnected();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      communication_deadline_pb.DeadlineNub.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.ContractNub.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.communication.ContractNub.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string summary = 12;
 * @return {string}
 */
proto.communication.ContractNub.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional google.protobuf.Timestamp deadline = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.communication.ContractNub.prototype.getDeadline = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.communication.ContractNub} returns this
*/
proto.communication.ContractNub.prototype.setDeadline = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.clearDeadline = function() {
  return this.setDeadline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractNub.prototype.hasDeadline = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 price = 4;
 * @return {number}
 */
proto.communication.ContractNub.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 stage = 5;
 * @return {number}
 */
proto.communication.ContractNub.prototype.getStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setStage = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 user_type = 6;
 * @return {number}
 */
proto.communication.ContractNub.prototype.getUserType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setUserType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool disputed = 7;
 * @return {boolean}
 */
proto.communication.ContractNub.prototype.getDisputed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setDisputed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool admin_requested = 8;
 * @return {boolean}
 */
proto.communication.ContractNub.prototype.getAdminRequested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setAdminRequested = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string worker_id = 9;
 * @return {string}
 */
proto.communication.ContractNub.prototype.getWorkerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setWorkerId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string buyer_id = 10;
 * @return {string}
 */
proto.communication.ContractNub.prototype.getBuyerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setBuyerId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string figma_link = 13;
 * @return {string}
 */
proto.communication.ContractNub.prototype.getFigmaLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setFigmaLink = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool figma_connected = 14;
 * @return {boolean}
 */
proto.communication.ContractNub.prototype.getFigmaConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.setFigmaConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * repeated DeadlineNub deadlines = 11;
 * @return {!Array<!proto.communication.DeadlineNub>}
 */
proto.communication.ContractNub.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineNub>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineNub, 11));
};


/**
 * @param {!Array<!proto.communication.DeadlineNub>} value
 * @return {!proto.communication.ContractNub} returns this
*/
proto.communication.ContractNub.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.communication.DeadlineNub=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineNub}
 */
proto.communication.ContractNub.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.communication.DeadlineNub, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractNub} returns this
 */
proto.communication.ContractNub.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.InviteDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.InviteDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.InviteDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.InviteDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.InviteDataRequest}
 */
proto.communication.InviteDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.InviteDataRequest;
  return proto.communication.InviteDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.InviteDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.InviteDataRequest}
 */
proto.communication.InviteDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.InviteDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.InviteDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.InviteDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.InviteDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.InviteDataRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.InviteDataRequest} returns this
 */
proto.communication.InviteDataRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret = 2;
 * @return {string}
 */
proto.communication.InviteDataRequest.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.InviteDataRequest} returns this
 */
proto.communication.InviteDataRequest.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ContractInviteNub.repeatedFields_ = [5,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractInviteNub.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractInviteNub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractInviteNub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractInviteNub.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invitedEmail: jspb.Message.getFieldWithDefault(msg, 11, ""),
    linkShare: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    invitedUserInSystem: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    worker: (f = msg.getWorker()) && communication_user_pb.UserNubEntity.toObject(includeInstance, f),
    buyer: (f = msg.getBuyer()) && communication_user_pb.UserNubEntity.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && proto.communication.PriceEntity.toObject(includeInstance, f),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineEntity.toObject, includeInstance),
    title: jspb.Message.getFieldWithDefault(msg, 8, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 6, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    communication_item_pb.ItemEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractInviteNub}
 */
proto.communication.ContractInviteNub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractInviteNub;
  return proto.communication.ContractInviteNub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractInviteNub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractInviteNub}
 */
proto.communication.ContractInviteNub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitedEmail(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLinkShare(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvitedUserInSystem(value);
      break;
    case 2:
      var value = new communication_user_pb.UserNubEntity;
      reader.readMessage(value,communication_user_pb.UserNubEntity.deserializeBinaryFromReader);
      msg.setWorker(value);
      break;
    case 3:
      var value = new communication_user_pb.UserNubEntity;
      reader.readMessage(value,communication_user_pb.UserNubEntity.deserializeBinaryFromReader);
      msg.setBuyer(value);
      break;
    case 4:
      var value = new proto.communication.PriceEntity;
      reader.readMessage(value,proto.communication.PriceEntity.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = new communication_deadline_pb.DeadlineEntity;
      reader.readMessage(value,communication_deadline_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 7:
      var value = new communication_item_pb.ItemEntity;
      reader.readMessage(value,communication_item_pb.ItemEntity.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractInviteNub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractInviteNub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractInviteNub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractInviteNub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInvitedEmail();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLinkShare();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getInvitedUserInSystem();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getWorker();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      communication_user_pb.UserNubEntity.serializeBinaryToWriter
    );
  }
  f = message.getBuyer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      communication_user_pb.UserNubEntity.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.communication.PriceEntity.serializeBinaryToWriter
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      communication_deadline_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      communication_item_pb.ItemEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.communication.ContractInviteNub.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string invited_email = 11;
 * @return {string}
 */
proto.communication.ContractInviteNub.prototype.getInvitedEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.setInvitedEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool link_share = 13;
 * @return {boolean}
 */
proto.communication.ContractInviteNub.prototype.getLinkShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.setLinkShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool invited_user_in_system = 12;
 * @return {boolean}
 */
proto.communication.ContractInviteNub.prototype.getInvitedUserInSystem = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.setInvitedUserInSystem = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional UserNubEntity worker = 2;
 * @return {?proto.communication.UserNubEntity}
 */
proto.communication.ContractInviteNub.prototype.getWorker = function() {
  return /** @type{?proto.communication.UserNubEntity} */ (
    jspb.Message.getWrapperField(this, communication_user_pb.UserNubEntity, 2));
};


/**
 * @param {?proto.communication.UserNubEntity|undefined} value
 * @return {!proto.communication.ContractInviteNub} returns this
*/
proto.communication.ContractInviteNub.prototype.setWorker = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.clearWorker = function() {
  return this.setWorker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractInviteNub.prototype.hasWorker = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UserNubEntity buyer = 3;
 * @return {?proto.communication.UserNubEntity}
 */
proto.communication.ContractInviteNub.prototype.getBuyer = function() {
  return /** @type{?proto.communication.UserNubEntity} */ (
    jspb.Message.getWrapperField(this, communication_user_pb.UserNubEntity, 3));
};


/**
 * @param {?proto.communication.UserNubEntity|undefined} value
 * @return {!proto.communication.ContractInviteNub} returns this
*/
proto.communication.ContractInviteNub.prototype.setBuyer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.clearBuyer = function() {
  return this.setBuyer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractInviteNub.prototype.hasBuyer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PriceEntity price = 4;
 * @return {?proto.communication.PriceEntity}
 */
proto.communication.ContractInviteNub.prototype.getPrice = function() {
  return /** @type{?proto.communication.PriceEntity} */ (
    jspb.Message.getWrapperField(this, proto.communication.PriceEntity, 4));
};


/**
 * @param {?proto.communication.PriceEntity|undefined} value
 * @return {!proto.communication.ContractInviteNub} returns this
*/
proto.communication.ContractInviteNub.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractInviteNub.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated DeadlineEntity deadlines = 5;
 * @return {!Array<!proto.communication.DeadlineEntity>}
 */
proto.communication.ContractInviteNub.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineEntity, 5));
};


/**
 * @param {!Array<!proto.communication.DeadlineEntity>} value
 * @return {!proto.communication.ContractInviteNub} returns this
*/
proto.communication.ContractInviteNub.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.communication.DeadlineEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineEntity}
 */
proto.communication.ContractInviteNub.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.communication.DeadlineEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.communication.ContractInviteNub.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string summary = 6;
 * @return {string}
 */
proto.communication.ContractInviteNub.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated ItemEntity items = 7;
 * @return {!Array<!proto.communication.ItemEntity>}
 */
proto.communication.ContractInviteNub.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.communication.ItemEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_item_pb.ItemEntity, 7));
};


/**
 * @param {!Array<!proto.communication.ItemEntity>} value
 * @return {!proto.communication.ContractInviteNub} returns this
*/
proto.communication.ContractInviteNub.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.communication.ItemEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ItemEntity}
 */
proto.communication.ContractInviteNub.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.communication.ItemEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractInviteNub} returns this
 */
proto.communication.ContractInviteNub.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ContractNubSet.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractNubSet.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractNubSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractNubSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractNubSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractNubsList: jspb.Message.toObjectList(msg.getContractNubsList(),
    proto.communication.ContractNub.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractNubSet}
 */
proto.communication.ContractNubSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractNubSet;
  return proto.communication.ContractNubSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractNubSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractNubSet}
 */
proto.communication.ContractNubSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new proto.communication.ContractNub;
      reader.readMessage(value,proto.communication.ContractNub.deserializeBinaryFromReader);
      msg.addContractNubs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractNubSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractNubSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractNubSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractNubSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractNubsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.communication.ContractNub.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ContractNubSet.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractNubSet} returns this
 */
proto.communication.ContractNubSet.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ContractNub contract_nubs = 2;
 * @return {!Array<!proto.communication.ContractNub>}
 */
proto.communication.ContractNubSet.prototype.getContractNubsList = function() {
  return /** @type{!Array<!proto.communication.ContractNub>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.communication.ContractNub, 2));
};


/**
 * @param {!Array<!proto.communication.ContractNub>} value
 * @return {!proto.communication.ContractNubSet} returns this
*/
proto.communication.ContractNubSet.prototype.setContractNubsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.communication.ContractNub=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ContractNub}
 */
proto.communication.ContractNubSet.prototype.addContractNubs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.communication.ContractNub, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractNubSet} returns this
 */
proto.communication.ContractNubSet.prototype.clearContractNubsList = function() {
  return this.setContractNubsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ContractCreateRequest.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 3, ""),
    invitedEmail: jspb.Message.getFieldWithDefault(msg, 8, ""),
    role: jspb.Message.getFieldWithDefault(msg, 9, 0),
    price: (f = msg.getPrice()) && proto.communication.PriceEntity.toObject(includeInstance, f),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineEntity.toObject, includeInstance),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    communication_item_pb.ItemEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractCreateRequest}
 */
proto.communication.ContractCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractCreateRequest;
  return proto.communication.ContractCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractCreateRequest}
 */
proto.communication.ContractCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitedEmail(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRole(value);
      break;
    case 5:
      var value = new proto.communication.PriceEntity;
      reader.readMessage(value,proto.communication.PriceEntity.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 6:
      var value = new communication_deadline_pb.DeadlineEntity;
      reader.readMessage(value,communication_deadline_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    case 7:
      var value = new communication_item_pb.ItemEntity;
      reader.readMessage(value,communication_item_pb.ItemEntity.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInvitedEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRole();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.communication.PriceEntity.serializeBinaryToWriter
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      communication_deadline_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      communication_item_pb.ItemEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ContractCreateRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.communication.ContractCreateRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string summary = 3;
 * @return {string}
 */
proto.communication.ContractCreateRequest.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string invited_email = 8;
 * @return {string}
 */
proto.communication.ContractCreateRequest.prototype.getInvitedEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.setInvitedEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 role = 9;
 * @return {number}
 */
proto.communication.ContractCreateRequest.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional PriceEntity price = 5;
 * @return {?proto.communication.PriceEntity}
 */
proto.communication.ContractCreateRequest.prototype.getPrice = function() {
  return /** @type{?proto.communication.PriceEntity} */ (
    jspb.Message.getWrapperField(this, proto.communication.PriceEntity, 5));
};


/**
 * @param {?proto.communication.PriceEntity|undefined} value
 * @return {!proto.communication.ContractCreateRequest} returns this
*/
proto.communication.ContractCreateRequest.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractCreateRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated DeadlineEntity deadlines = 6;
 * @return {!Array<!proto.communication.DeadlineEntity>}
 */
proto.communication.ContractCreateRequest.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineEntity, 6));
};


/**
 * @param {!Array<!proto.communication.DeadlineEntity>} value
 * @return {!proto.communication.ContractCreateRequest} returns this
*/
proto.communication.ContractCreateRequest.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.communication.DeadlineEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineEntity}
 */
proto.communication.ContractCreateRequest.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.communication.DeadlineEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};


/**
 * repeated ItemEntity items = 7;
 * @return {!Array<!proto.communication.ItemEntity>}
 */
proto.communication.ContractCreateRequest.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.communication.ItemEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_item_pb.ItemEntity, 7));
};


/**
 * @param {!Array<!proto.communication.ItemEntity>} value
 * @return {!proto.communication.ContractCreateRequest} returns this
*/
proto.communication.ContractCreateRequest.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.communication.ItemEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ItemEntity}
 */
proto.communication.ContractCreateRequest.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.communication.ItemEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractCreateRequest} returns this
 */
proto.communication.ContractCreateRequest.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractFinishCreationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractFinishCreationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractFinishCreationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractFinishCreationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractFinishCreationRequest}
 */
proto.communication.ContractFinishCreationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractFinishCreationRequest;
  return proto.communication.ContractFinishCreationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractFinishCreationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractFinishCreationRequest}
 */
proto.communication.ContractFinishCreationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractFinishCreationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractFinishCreationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractFinishCreationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractFinishCreationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.communication.ContractFinishCreationRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractFinishCreationRequest} returns this
 */
proto.communication.ContractFinishCreationRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.communication.ContractFinishCreationRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractFinishCreationRequest} returns this
 */
proto.communication.ContractFinishCreationRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.communication.ContractUpdateRequest.repeatedFields_ = [8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 4, ""),
    invitedEmail: jspb.Message.getFieldWithDefault(msg, 5, ""),
    linkShare: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    role: jspb.Message.getFieldWithDefault(msg, 6, 0),
    price: (f = msg.getPrice()) && proto.communication.PriceEntity.toObject(includeInstance, f),
    deadlinesList: jspb.Message.toObjectList(msg.getDeadlinesList(),
    communication_deadline_pb.DeadlineEntity.toObject, includeInstance),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    communication_item_pb.ItemEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractUpdateRequest}
 */
proto.communication.ContractUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractUpdateRequest;
  return proto.communication.ContractUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractUpdateRequest}
 */
proto.communication.ContractUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitedEmail(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLinkShare(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRole(value);
      break;
    case 7:
      var value = new proto.communication.PriceEntity;
      reader.readMessage(value,proto.communication.PriceEntity.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 8:
      var value = new communication_deadline_pb.DeadlineEntity;
      reader.readMessage(value,communication_deadline_pb.DeadlineEntity.deserializeBinaryFromReader);
      msg.addDeadlines(value);
      break;
    case 9:
      var value = new communication_item_pb.ItemEntity;
      reader.readMessage(value,communication_item_pb.ItemEntity.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getInvitedEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLinkShare();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getRole();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.communication.PriceEntity.serializeBinaryToWriter
    );
  }
  f = message.getDeadlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      communication_deadline_pb.DeadlineEntity.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      communication_item_pb.ItemEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.communication.ContractUpdateRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.communication.ContractUpdateRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.communication.ContractUpdateRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string summary = 4;
 * @return {string}
 */
proto.communication.ContractUpdateRequest.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string invited_email = 5;
 * @return {string}
 */
proto.communication.ContractUpdateRequest.prototype.getInvitedEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.setInvitedEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool link_share = 10;
 * @return {boolean}
 */
proto.communication.ContractUpdateRequest.prototype.getLinkShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.setLinkShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional uint32 role = 6;
 * @return {number}
 */
proto.communication.ContractUpdateRequest.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional PriceEntity price = 7;
 * @return {?proto.communication.PriceEntity}
 */
proto.communication.ContractUpdateRequest.prototype.getPrice = function() {
  return /** @type{?proto.communication.PriceEntity} */ (
    jspb.Message.getWrapperField(this, proto.communication.PriceEntity, 7));
};


/**
 * @param {?proto.communication.PriceEntity|undefined} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
*/
proto.communication.ContractUpdateRequest.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractUpdateRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated DeadlineEntity deadlines = 8;
 * @return {!Array<!proto.communication.DeadlineEntity>}
 */
proto.communication.ContractUpdateRequest.prototype.getDeadlinesList = function() {
  return /** @type{!Array<!proto.communication.DeadlineEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_deadline_pb.DeadlineEntity, 8));
};


/**
 * @param {!Array<!proto.communication.DeadlineEntity>} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
*/
proto.communication.ContractUpdateRequest.prototype.setDeadlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.communication.DeadlineEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.DeadlineEntity}
 */
proto.communication.ContractUpdateRequest.prototype.addDeadlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.communication.DeadlineEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.clearDeadlinesList = function() {
  return this.setDeadlinesList([]);
};


/**
 * repeated ItemEntity items = 9;
 * @return {!Array<!proto.communication.ItemEntity>}
 */
proto.communication.ContractUpdateRequest.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.communication.ItemEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, communication_item_pb.ItemEntity, 9));
};


/**
 * @param {!Array<!proto.communication.ItemEntity>} value
 * @return {!proto.communication.ContractUpdateRequest} returns this
*/
proto.communication.ContractUpdateRequest.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.communication.ItemEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.communication.ItemEntity}
 */
proto.communication.ContractUpdateRequest.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.communication.ItemEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.communication.ContractUpdateRequest} returns this
 */
proto.communication.ContractUpdateRequest.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contract: (f = msg.getContract()) && proto.communication.ContractEntity.toObject(includeInstance, f),
    role: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractResponse}
 */
proto.communication.ContractResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractResponse;
  return proto.communication.ContractResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractResponse}
 */
proto.communication.ContractResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.communication.ContractEntity;
      reader.readMessage(value,proto.communication.ContractEntity.deserializeBinaryFromReader);
      msg.setContract(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.communication.ContractEntity.serializeBinaryToWriter
    );
  }
  f = message.getRole();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional ContractEntity contract = 2;
 * @return {?proto.communication.ContractEntity}
 */
proto.communication.ContractResponse.prototype.getContract = function() {
  return /** @type{?proto.communication.ContractEntity} */ (
    jspb.Message.getWrapperField(this, proto.communication.ContractEntity, 2));
};


/**
 * @param {?proto.communication.ContractEntity|undefined} value
 * @return {!proto.communication.ContractResponse} returns this
*/
proto.communication.ContractResponse.prototype.setContract = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.communication.ContractResponse} returns this
 */
proto.communication.ContractResponse.prototype.clearContract = function() {
  return this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.communication.ContractResponse.prototype.hasContract = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 role = 3;
 * @return {number}
 */
proto.communication.ContractResponse.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractResponse} returns this
 */
proto.communication.ContractResponse.prototype.setRole = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ClaimContractRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ClaimContractRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ClaimContractRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ClaimContractRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ClaimContractRequest}
 */
proto.communication.ClaimContractRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ClaimContractRequest;
  return proto.communication.ClaimContractRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ClaimContractRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ClaimContractRequest}
 */
proto.communication.ClaimContractRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ClaimContractRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ClaimContractRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ClaimContractRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ClaimContractRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ClaimContractRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ClaimContractRequest} returns this
 */
proto.communication.ClaimContractRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.ClaimContractRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ClaimContractRequest} returns this
 */
proto.communication.ClaimContractRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.communication.ClaimContractRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ClaimContractRequest} returns this
 */
proto.communication.ClaimContractRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.SignContractRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.SignContractRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.SignContractRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SignContractRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.SignContractRequest}
 */
proto.communication.SignContractRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.SignContractRequest;
  return proto.communication.SignContractRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.SignContractRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.SignContractRequest}
 */
proto.communication.SignContractRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.SignContractRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.SignContractRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.SignContractRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SignContractRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.SignContractRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SignContractRequest} returns this
 */
proto.communication.SignContractRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.SignContractRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SignContractRequest} returns this
 */
proto.communication.SignContractRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.SettleContractRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.SettleContractRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.SettleContractRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SettleContractRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.SettleContractRequest}
 */
proto.communication.SettleContractRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.SettleContractRequest;
  return proto.communication.SettleContractRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.SettleContractRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.SettleContractRequest}
 */
proto.communication.SettleContractRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.SettleContractRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.SettleContractRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.SettleContractRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SettleContractRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.SettleContractRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SettleContractRequest} returns this
 */
proto.communication.SettleContractRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.SettleContractRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SettleContractRequest} returns this
 */
proto.communication.SettleContractRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractAdminSupport.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractAdminSupport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractAdminSupport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractAdminSupport.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractAdminSupport}
 */
proto.communication.ContractAdminSupport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractAdminSupport;
  return proto.communication.ContractAdminSupport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractAdminSupport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractAdminSupport}
 */
proto.communication.ContractAdminSupport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractAdminSupport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractAdminSupport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractAdminSupport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractAdminSupport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.communication.ContractAdminSupport.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractAdminSupport} returns this
 */
proto.communication.ContractAdminSupport.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.communication.ContractAdminSupport.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractAdminSupport} returns this
 */
proto.communication.ContractAdminSupport.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractToggleLockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractToggleLockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractToggleLockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractToggleLockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contractLock: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractToggleLockRequest}
 */
proto.communication.ContractToggleLockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractToggleLockRequest;
  return proto.communication.ContractToggleLockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractToggleLockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractToggleLockRequest}
 */
proto.communication.ContractToggleLockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractLock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractToggleLockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractToggleLockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractToggleLockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractToggleLockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContractLock();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ContractToggleLockRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractToggleLockRequest} returns this
 */
proto.communication.ContractToggleLockRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.ContractToggleLockRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractToggleLockRequest} returns this
 */
proto.communication.ContractToggleLockRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool contract_lock = 3;
 * @return {boolean}
 */
proto.communication.ContractToggleLockRequest.prototype.getContractLock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.communication.ContractToggleLockRequest} returns this
 */
proto.communication.ContractToggleLockRequest.prototype.setContractLock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractReactLockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractReactLockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractReactLockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractReactLockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messageId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractReactLockRequest}
 */
proto.communication.ContractReactLockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractReactLockRequest;
  return proto.communication.ContractReactLockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractReactLockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractReactLockRequest}
 */
proto.communication.ContractReactLockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractReactLockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractReactLockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractReactLockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractReactLockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ContractReactLockRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractReactLockRequest} returns this
 */
proto.communication.ContractReactLockRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.ContractReactLockRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractReactLockRequest} returns this
 */
proto.communication.ContractReactLockRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message_id = 3;
 * @return {string}
 */
proto.communication.ContractReactLockRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractReactLockRequest} returns this
 */
proto.communication.ContractReactLockRequest.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 status = 4;
 * @return {number}
 */
proto.communication.ContractReactLockRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ContractReactLockRequest} returns this
 */
proto.communication.ContractReactLockRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractDeleteDraftRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractDeleteDraftRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractDeleteDraftRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractDeleteDraftRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractDeleteDraftRequest}
 */
proto.communication.ContractDeleteDraftRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractDeleteDraftRequest;
  return proto.communication.ContractDeleteDraftRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractDeleteDraftRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractDeleteDraftRequest}
 */
proto.communication.ContractDeleteDraftRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractDeleteDraftRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractDeleteDraftRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractDeleteDraftRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractDeleteDraftRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ContractDeleteDraftRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractDeleteDraftRequest} returns this
 */
proto.communication.ContractDeleteDraftRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.ContractDeleteDraftRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ContractDeleteDraftRequest} returns this
 */
proto.communication.ContractDeleteDraftRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ContractEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ContractEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ContractEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ContractEditResponse}
 */
proto.communication.ContractEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ContractEditResponse;
  return proto.communication.ContractEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ContractEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ContractEditResponse}
 */
proto.communication.ContractEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ContractEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ContractEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ContractEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ContractEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.EmailChangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.EmailChangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.EmailChangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.EmailChangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newEmail: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.EmailChangeRequest}
 */
proto.communication.EmailChangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.EmailChangeRequest;
  return proto.communication.EmailChangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.EmailChangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.EmailChangeRequest}
 */
proto.communication.EmailChangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.EmailChangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.EmailChangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.EmailChangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.EmailChangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.EmailChangeRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.EmailChangeRequest} returns this
 */
proto.communication.EmailChangeRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.EmailChangeRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.EmailChangeRequest} returns this
 */
proto.communication.EmailChangeRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string new_email = 3;
 * @return {string}
 */
proto.communication.EmailChangeRequest.prototype.getNewEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.EmailChangeRequest} returns this
 */
proto.communication.EmailChangeRequest.prototype.setNewEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.EmailChangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.EmailChangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.EmailChangeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.EmailChangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    newSecret: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.EmailChangeResponse}
 */
proto.communication.EmailChangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.EmailChangeResponse;
  return proto.communication.EmailChangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.EmailChangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.EmailChangeResponse}
 */
proto.communication.EmailChangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.EmailChangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.EmailChangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.EmailChangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.EmailChangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewSecret();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string new_secret = 1;
 * @return {string}
 */
proto.communication.EmailChangeResponse.prototype.getNewSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.EmailChangeResponse} returns this
 */
proto.communication.EmailChangeResponse.prototype.setNewSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.EmailResendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.EmailResendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.EmailResendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.EmailResendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.EmailResendRequest}
 */
proto.communication.EmailResendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.EmailResendRequest;
  return proto.communication.EmailResendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.EmailResendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.EmailResendRequest}
 */
proto.communication.EmailResendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.EmailResendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.EmailResendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.EmailResendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.EmailResendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.EmailResendRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.EmailResendRequest} returns this
 */
proto.communication.EmailResendRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.EmailResendRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.EmailResendRequest} returns this
 */
proto.communication.EmailResendRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.FigmaLinkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.FigmaLinkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.FigmaLinkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaLinkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    figmaLink: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.FigmaLinkRequest}
 */
proto.communication.FigmaLinkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.FigmaLinkRequest;
  return proto.communication.FigmaLinkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.FigmaLinkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.FigmaLinkRequest}
 */
proto.communication.FigmaLinkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.FigmaLinkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.FigmaLinkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.FigmaLinkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaLinkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFigmaLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.FigmaLinkRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaLinkRequest} returns this
 */
proto.communication.FigmaLinkRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.FigmaLinkRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaLinkRequest} returns this
 */
proto.communication.FigmaLinkRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string figma_link = 3;
 * @return {string}
 */
proto.communication.FigmaLinkRequest.prototype.getFigmaLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaLinkRequest} returns this
 */
proto.communication.FigmaLinkRequest.prototype.setFigmaLink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.FigmaItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.FigmaItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.FigmaItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    itemId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    componentId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.FigmaItemRequest}
 */
proto.communication.FigmaItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.FigmaItemRequest;
  return proto.communication.FigmaItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.FigmaItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.FigmaItemRequest}
 */
proto.communication.FigmaItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.FigmaItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.FigmaItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.FigmaItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComponentId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 5;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string item_id = 3;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string component_id = 4;
 * @return {string}
 */
proto.communication.FigmaItemRequest.prototype.getComponentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaItemRequest} returns this
 */
proto.communication.FigmaItemRequest.prototype.setComponentId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.FigmaFileConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.FigmaFileConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.FigmaFileConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaFileConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contractId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    figmaLink: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.FigmaFileConnectRequest}
 */
proto.communication.FigmaFileConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.FigmaFileConnectRequest;
  return proto.communication.FigmaFileConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.FigmaFileConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.FigmaFileConnectRequest}
 */
proto.communication.FigmaFileConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigmaLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.FigmaFileConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.FigmaFileConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.FigmaFileConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.FigmaFileConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFigmaLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.FigmaFileConnectRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaFileConnectRequest} returns this
 */
proto.communication.FigmaFileConnectRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract_id = 2;
 * @return {string}
 */
proto.communication.FigmaFileConnectRequest.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaFileConnectRequest} returns this
 */
proto.communication.FigmaFileConnectRequest.prototype.setContractId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string figma_link = 3;
 * @return {string}
 */
proto.communication.FigmaFileConnectRequest.prototype.getFigmaLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.FigmaFileConnectRequest} returns this
 */
proto.communication.FigmaFileConnectRequest.prototype.setFigmaLink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.SuggestPriceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.SuggestPriceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.SuggestPriceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SuggestPriceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newPrice: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.SuggestPriceReq}
 */
proto.communication.SuggestPriceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.SuggestPriceReq;
  return proto.communication.SuggestPriceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.SuggestPriceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.SuggestPriceReq}
 */
proto.communication.SuggestPriceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNewPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.SuggestPriceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.SuggestPriceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.SuggestPriceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.SuggestPriceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewPrice();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.SuggestPriceReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SuggestPriceReq} returns this
 */
proto.communication.SuggestPriceReq.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.communication.SuggestPriceReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.SuggestPriceReq} returns this
 */
proto.communication.SuggestPriceReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 new_price = 3;
 * @return {number}
 */
proto.communication.SuggestPriceReq.prototype.getNewPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.SuggestPriceReq} returns this
 */
proto.communication.SuggestPriceReq.prototype.setNewPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.communication.ReactPriceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.communication.ReactPriceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.communication.ReactPriceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ReactPriceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messageId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.communication.ReactPriceReq}
 */
proto.communication.ReactPriceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.communication.ReactPriceReq;
  return proto.communication.ReactPriceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.communication.ReactPriceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.communication.ReactPriceReq}
 */
proto.communication.ReactPriceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.communication.ReactPriceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.communication.ReactPriceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.communication.ReactPriceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.communication.ReactPriceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.communication.ReactPriceReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ReactPriceReq} returns this
 */
proto.communication.ReactPriceReq.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.communication.ReactPriceReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ReactPriceReq} returns this
 */
proto.communication.ReactPriceReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message_id = 4;
 * @return {string}
 */
proto.communication.ReactPriceReq.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.communication.ReactPriceReq} returns this
 */
proto.communication.ReactPriceReq.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 status = 3;
 * @return {number}
 */
proto.communication.ReactPriceReq.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.communication.ReactPriceReq} returns this
 */
proto.communication.ReactPriceReq.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.communication);
